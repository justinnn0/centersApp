cumulative = TRUE)+transition_manual(created_at),
data = ghost_points_ini, alpha = 0) +
geom_point(aes(x = lon, y = lat, size = followers, # this is the final transparent frames
cumulative = TRUE)+transition_manual(created_at),
data = ghost_points_fin, alpha = 0) +
scale_size_continuous(range = c(1, 8), breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
map
ani.options(interval = 0.2)
gganimate(map)
url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read_csv(url(url_csv)) %>%
select(-1)
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
library(ggplot2)
library(maps)
library(ggthemes)
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
library(tibble)
library(lubridate)
ghost_points_ini <- tibble(
created_at = as.Date('2011-09-01'),
followers = 0, lon = 0, lat = 0)
ghost_points_fin <- tibble(
created_at = seq(as.Date('2017-05-16'),
as.Date('2017-05-30'),
by = 'days'),
followers = 0, lon = 0, lat = 0)
map <- world +
geom_point(aes(x = lon, y = lat, size = followers,
cumulative = TRUE) +
transition_manual(created_at),
data = rladies, colour = 'purple', alpha = .5) +
geom_point(aes(x = lon, y = lat, size = followers, # this is the init transparent frame
cumulative = TRUE)+transition_manual(created_at),
data = ghost_points_ini, alpha = 0) +
geom_point(aes(x = lon, y = lat, size = followers, # this is the final transparent frames
cumulative = TRUE)+transition_manual(created_at),
data = ghost_points_fin, alpha = 0) +
scale_size_continuous(range = c(1, 8), breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
map
ani.options(interval = 0.2)
gganimate(map)
library(ggplot2)
library(maps)
library(ggthemes)
library(readr)
library(dplyr)
library(animation)
library(gganimate)
url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read_csv(url(url_csv)) %>%
select(-1)
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
library(ggplot2)
library(maps)
library(ggthemes)
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
map
library(tibble)
library(lubridate)
ghost_points_ini <- tibble(
created_at = as.Date('2011-09-01'),
followers = 0, lon = 0, lat = 0)
ghost_points_fin <- tibble(
created_at = seq(as.Date('2017-05-16'),
as.Date('2017-05-30'),
by = 'days'),
followers = 0, lon = 0, lat = 0)
map <- world +
geom_point(aes(x = lon, y = lat, size = followers,
cumulative = TRUE) +
transition_manual(created_at),
data = rladies, colour = 'purple', alpha = .5) +
geom_point(aes(x = lon, y = lat, size = followers, # this is the init transparent frame
cumulative = TRUE)+transition_manual(created_at),
data = ghost_points_ini, alpha = 0) +
geom_point(aes(x = lon, y = lat, size = followers, # this is the final transparent frames
cumulative = TRUE)+transition_manual(created_at),
data = ghost_points_fin, alpha = 0) +
scale_size_continuous(range = c(1, 8), breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
map
ani.options(interval = 0.2)
gganimate(map)
map
url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read_csv(url(url_csv)) %>%
select(-1)
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
library(ggplot2)
library(maps)
library(ggthemes)
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
map
world <- ggplot() +
borders("australia", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
map
world <- ggplot() +
borders("Australia", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
map
world <- ggplot() +
borders("Australia", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
map
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("Australia", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
library(ggplot2)
library(maps)
library(ggthemes)
world <- ggplot() +
borders("Australia", colour = "gray85", fill = "gray80") +
theme_map()
world <- ggplot() +
borders("australia", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = lon, y = lat, size = followers),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(250, 500, 750, 1000)) +
labs(size = 'Followers')
library(ggplot2)
library(maps)
library(ggthemes)
world <- ggplot() +
borders("australia", colour = "gray85", fill = "gray80") +
theme_map()
url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read_csv(url(url_csv)) %>%
select(-1)
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
#url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
library(ggplot2)
library(maps)
library(ggthemes)
library(readr)
library(dplyr)
library(animation)
library(gganimate)
#url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
setwd("~/Desktop/2019S1/FIT5120/homecenter")
library(DT)
#url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
#url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 8),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 7),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 6),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
#url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
View(df)
View(map)
View(rladies)
#url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
rladies$Number <- as.numeric(rladies$Number)
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
world <- ggplot() +
borders("state", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("county", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("AU", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
rladies$Number <- as.numeric(rladies$Number)
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("WORLD", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
library(ggplot2)
library(maps)
library(ggthemes)
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')
map
library(tibble)
library(lubridate)
library(gapminder)
dementiaGrowth <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
ggplot(gapminder, aes(dementiaGrowth$Year, dementiaGrowth$Number, size = Number, colour = State)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~State) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
dementiaGrowth <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
ggplot(gapminder, aes(dementiaGrowth$Year, dementiaGrowth$Number, size = dementiaGrowth$Number, colour = dementiaGrowth$State)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~State) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
dementiaGrowth <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
ggplot(dementiaGrowth, aes(Year, Number, size = Number, colour = State)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~State) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
dementiaGrowth <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
dementiaGrowth$Number <- as.numeric(dementiaGrowth$Number)
ggplot(dementiaGrowth, aes(Year, Number, size = Number, colour = State)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~State) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
warnings()
dementiaGrowth$Number <- as.numeric(dementiaGrowth$Number)
ggplot(dementiaGrowth, aes(Year, Number, size = Number, colour = State)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~State) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(Year) +
ease_aes('linear')
library(gapminder)
dementiaGrowth <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
dementiaGrowth$Number <- as.numeric(dementiaGrowth$Number)
ggplot(dementiaGrowth, aes(Year, Number, size = Number, colour = State)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
#facet_wrap(~State) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'Year', y = 'Number of dementia patients') +
transition_time(Year) +
ease_aes('linear')
library(shiny); runApp('~/Untitled7.R')
runApp('~/Untitled7.R')
runApp('~/Untitled7.R')
setwd("~/Desktop/2019S1/FIT5120/homecenter")
runApp('~/Untitled7.R')
runApp('Untitled7.R')
runApp('Untitled7.R')
runApp('Untitled7.R')
runApp('Untitled7.R')
install.packages("plotly")
runApp('Untitled7.R')
runApp('Untitled7.R')
runApp('Untitled7.R')
runApp('Untitled7.R')
#url_csv <- 'https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv'
rladies <- read.csv("dementiaGrowth.csv",encoding="UTF-8")
rladies$Number <- as.numeric(rladies$Number)
library(DT)
datatable(rladies, rownames = FALSE,
options = list(pageLength = 5))
world <- ggplot() +
borders("world", colour = "gray85", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = Lon, y = Lat, size = Number),
data = rladies,
colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 5),
breaks = c(25000, 50000, 75000, 100000)) +
labs(size = 'Number')  +
transition_time(Year)
map
