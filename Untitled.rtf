{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset77 KohinoorDevanagari-Regular;
\f3\fnil\fcharset129 AppleSDGothicNeo-Regular;\f4\fnil\fcharset178 GeezaPro;\f5\froman\fcharset0 Times-Roman;
\f6\fnil\fcharset134 STSongti-SC-Regular;\f7\fnil\fcharset77 ITFDevanagari-Book;\f8\fnil\fcharset129 AppleMyungjo;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;}
\paperw11900\paperh16840\margl1440\margr1440\vieww22160\viewh13560\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
# x show lat lon\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
library(shinyWidgets)\
\
\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(\
  \
  tags$head(tags$style(\
    HTML('\
         #sidebar \{\
         background-color: #222222;\
         \}\
         \
         body, label, input, button, select \{ \
         font-family: "Arial";\
         \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
    )),\
  \
  \
  sidebarLayout(\
    \
    #tags$head(tags$style(HTML('background-color: #222222'))),\
    #setBackgroundColor("#222222")\
    \
    sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
                 fluidRow(\
                   column(12,\
                          selectInput("Postcode",\
                                      HTML("<h3 style='color:white;'>Enter or select a postcode</h3>"),\
                                      c(\
                                        sort(unique(as.character(centers$Postcode)))),selected =2000),\
                          align='left'),align='left'),\
                 br(),\
                 \
                 \
                 selectInput("rbLanguage", HTML("<h3 style='color:white;'>Culture & Language the care center provides:</h3>"), \
                             c("English" = "English", \
                                "
\f1 \'d6\'d0\'ce\'c4
\f0 " = "Chinese" ,\
                               "Italiano" = "Italian",\
                               "
\f2 \uc0\u2361 \u2367 \u2344 \u2381 \u2342 \u2368 
\f0  " = "Hindi",\
                               "\uc0\u1056 \u1091 \u1089 \u1089 \u1082 \u1080 \u1081 " = "Russian",\
                               "Deutsche"="German", \
                               "\uc0\u917 \u955 \u955 \u951 \u957 \u953 \u954 \u940 " = "Greek",\
                               "Ti\uc0\u7871 ng Vi\u7879 t"="Vietnamese",\
                               "
\f1 \'c8\'d5\'b1\'be\'d5\'5a
\f0 " =  "Japanese",\
                               "
\f3 \'c7\'d1\'b1\'b9\'be\'ee
\f0 " = "Korean",\
                               "Espa\'f1ol" = "Spanish", \
                               "fran\'e7ais" = "French",\
                               " 
\f4 \'da\'d1\'c8\'ec
\f0 " = "Arabic" ,\
                               "All" = "English" \
                               \
                               ),selected = "English"\
                 ),\
                 br(),\
                 \
                 radioButtons("rbreligion",  HTML("<h3 style='color:white;'>Religion:</h3>"),\
                              choiceNames = list(\
                                HTML('<img id="img26" src="allReligion.png" height=40 px width=80 px"><label style="color:white">All</label></img>'),\
                                HTML('<img id="img26" src="Catholic.png" height=40 px width=80 px"><label style="color:white">Catholic</label></img>'),\
                                HTML('<img id="img26" src="Buddism.png" height=40 px width=80 px"><label style="color:white">Buddism</label></img>'),\
                                HTML('<img id="img26" src="Islam.png" height=40 px width=80 px"><label style="color:white">Islam</label></img>'),\
                                HTML('<img id="img26" src="Judaism.png" height=40 px width=80 px"><label style="color:white">Judaism</label></img>'),\
                                HTML('<img id="img26" src="Hinduism.png" height=40 px width=80 px"><label style="color:white">Hinduism</label></img>'),\
                                HTML('<img id="img26" src="Eastern_orthodox.png" height=40 px width=80 px"><label style="color:white">Eastern orthodox</label></img>'),\
                                HTML('<img id="img26" src="Lutheran.png" height=40 px width=80 px"><label style="color:white">Lutheran</label></img>')\
                                \
                              ),\
                              \
                              \
                              choiceValues = list(\
                                "allReligion","Catholic", "Buddism", "Islam","Judaism", "Hinduism", "Eastern Orthodox","Lutheran"\
                              ),selected="allReligion"\
                 )\
                 \
                 \
                 \
                 \
    ),\
    \
    \
    #h3( em("Home Care Centers in Australia"), align = "center")\
    #h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
    # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    # h4("1: Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
    # h4("2: To search for other culture and religion just type in the search box below the the map",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    \
    \
    # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
    # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
    #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    \
    #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      br(),\
     \
      leafletOutput("sitemap"),\
      \
      DT::dataTableOutput("table"),\
      tags$head(tags$style("#table \{background-color: white; \}", media="screen", type="text/css")),\
      h4("Click and select a name or address from the above table to search on Google", align = "left",style = "color:white",font="Times New Roman"),\
      # uiOutput(outputId = "ggoogle"),\
      # uiOutput("tab"),\
      fluidRow( \
        column(6, uiOutput("tab"))\
        #column(6,uiOutput("tabggmap"))\
        )\
      # uiOutput(outputId = "ggmap"),\
      #uiOutput("tabggmap")\
      #verbatimTextOutput("selectedCells")\
      #box(google_mapOutput("myGMap") )\
      \
      \
    )  \
    \
  )\
  )\
\
server <- function(input, output) \{\
  \
\
  \
  output$ggmap <- renderUI(\{\
    \
    tags$img(HTML('<img id="img35" src="ggmap.png" height=150 px width=150 px"><label style="color:white"></label></img>'))\
    \
  \})\
  \
  output$ggoogle <- renderUI(\{\
    tags$img(HTML('<img id="img36" src="ggoogle.png" height=150 px width=150 px"><label style="color:white"></label></img>'))\
    \
  \})\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    \
    req(input$Postcode)\
    \
    \
    \
    output$table <- DT::renderDataTable(\{\
      \
      filteredPostcode <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
      filteredPostcode <- as.data.frame(filteredPostcode)\
      datatable(\
        filteredPostcode, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        \
        options = list(\
          searching=FALSE,\
          \
          # columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          columnDefs = list(list(visible=FALSE, targets=c(10,11,12))),\
          scrollX = TRUE,\
          dom = 'Bfrtp',\
          pageLength=5,\
          buttons = c('copy','pdf', 'print'),deferRender = TRUE,\
          scrollY = 200,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \
      \
      observe(\{\
        \
        req(input$rbLanguage)\
        \
        \
        output$table <- DT::renderDataTable(\{\
          \
          if ( input$rbLanguage == "English")\
          \{\
            filteredClickLan <- filteredPostcode\
          \}\
          else\
          \{\
            \
            filteredClickLan <- filteredPostcode %>%\
              filter( grepl(input$rbLanguage, Language ) | grepl(input$rbLanguage, Culture ))              \
          \}\
          \
          filteredClickLan <- as.data.frame(filteredClickLan)\
          datatable(\
            filteredClickLan, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
            rownames=FALSE,\
            #fixedHeader = TRUE,keys = TRUE,\
            #options = list(searchHighlight = TRUE)\
            #filter = 'top',\
            #dom = 'Bfrtip',\
            #searchHighlight = TRUE\
            \
            \
            options = list(\
              searching= FALSE,\
              #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
              columnDefs = list(list(visible=FALSE, targets=c(10,11,12))),\
              scrollX = TRUE,\
              dom = 'Bfrtp',\
              pageLength=5,\
              buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
              scrollY = 150,\
              scroller = TRUE,\
              search = list( caseInsensitive = FALSE),\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
          ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            \
            formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \})\
        \
        # google map\
        #\
        \
        \
        \
      \})\
      \
      #religion dt\
      \
      observe(\{\
        \
        req(input$rbreligion)\
        \
        \
        output$table <- DT::renderDataTable(\{\
          \
          if ( input$rbreligion == "allReligion")\
          \{\
            filteredClickreli <- filteredPostcode\
          \}\
          else\
          \{\
            \
            filteredClickreli <- filteredPostcode %>%\
              filter( grepl(input$rbreligion, Religion) \
              )\
          \}\
          \
          filteredClickreli <- as.data.frame(filteredClickreli)\
          datatable(\
            filteredClickreli, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
            rownames=FALSE,\
            #fixedHeader = TRUE,keys = TRUE,\
            #options = list(searchHighlight = TRUE)\
            #filter = 'top',\
            #dom = 'Bfrtip',\
            #searchHighlight = TRUE\
            \
            \
            options = list(\
              searching= FALSE,\
              #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
              columnDefs = list(list(visible=FALSE, targets=c(10,11,12))),\
              scrollX = TRUE,\
              dom = 'Bfrtp',\
              pageLength=5,\
              buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
              scrollY = 150,\
              scroller = TRUE,\
              search = list( caseInsensitive = FALSE),\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
          ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            \
            formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \})\
        \
      \})\
      \
      # dt cell - google map \
      \
      observe(\{\
        req(input$table_cell_clicked)\
        \
        # sstring <- "https://www.google.com/search?cr=countryAU&q="+input$table_cell_clicked\
        #https://www.google.com/search?cr=countryAU&q=St Louis Home Care\
        #https://www.google.com/maps/place/\
        output$selectedCells <- renderPrint(input$table_cell_clicked$value)\
        sstring <- paste("https://www.google.com/search?cr=countryAU&q=", as.character(input$table_cell_clicked$value))\
        \
       url <- a(as.character(input$table_cell_clicked$value), href= sstring,target="_blank")\
        \
        output$tab <- renderUI(\{\
          tagList( HTML("<h3 style='color:white; align ='center'>Search on Google</h3>"), url)\
        \}) # HTML("<p style='color:blue;'>English</p>"),\
        \
        sstring2 <- paste("https://www.google.com/maps/place/", as.character(input$table_cell_clicked$value))\
       # url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2)\
        url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2, target="_blank")\
        output$tabggmap <- renderUI(\{\
          tagList(HTML("<h3 style='color:white; align ='center'>Search on Google Map</h3>"), url2)\
        \})\
        \
        \
        \
        # https://www.google.com/search?cr=countryAU&q=monash\
        \
        # centersfiltered <- filteredPostcode %>% filter(No == input$table_cell_clicked$value)\
        \
      \})\
      \
      \
      \
      \
    \})\
    \
    \
    # output$selectedCells <- renderPrint(input$table_rows_selected)\
    #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
    \
    #\
    \
    #\
    \
    #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
    #\
    \
    #postcode leaflet\
    \
    observe(\{\
      \
      req(input$Postcode)\
      \
      output$sitemap = renderLeaflet(\
        \{\
          filteredPostcode2 <- centers %>%\
            filter(\
              Postcode == input$Postcode)\
          \
          # file <- "LogoBlue3.png"\
          #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
          #URL <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
          #  URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
          \
          filteredPostcode2 <- as.data.frame(filteredPostcode2)\
          leaflet(data=filteredPostcode2) %>% \
            addTiles() %>%  \
            addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
            #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
            #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
            # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL, ">"))%>%\
            \
            \
            addEasyButton(easyButton(\
              icon="fa-crosshairs", title="Locate Me",\
              onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \
          \
          #lan\
          observe(\{\
            # click <- input$rb,input$Postcode,\
            req(input$rbLanguage)\
            \
            \
            #print(click)\
            \
            output$sitemap = renderLeaflet(\
              \{\
                \
                if ( input$rbLanguage == "English") \
                \{\
                  filteredClickLan <- filteredPostcode2\
                \}\
                else\
                \{\
                  \
                  filteredClickLan <- filteredPostcode2 %>%\
                    filter( grepl(input$rbLanguage, Language ) | grepl(input$rbLanguage, Culture ))\
                    #)\
                \}\
                filteredClickLan <- as.data.frame(filteredClickLan)\
                # file <- "LogoBlue3.png"\
                # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
                #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
                \
                #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                # img(id="img26",src = "allReligion.png", height = 40, width=80),\
                \
                leaflet(data=filteredClickLan) %>% \
                  addTiles() %>%  \
                  addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                  #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                  # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
                  \
                  addEasyButton(easyButton(\
                    icon="fa-crosshairs", title="Locate Me",\
                    onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \})\
            \
            \
          \})\
          \
          # religion leaflet\
          observe(\{\
            # click <- input$rb,input$Postcode,\
            req(input$rbreligion)\
            \
            \
            #print(click)\
            \
            output$sitemap = renderLeaflet(\
              \{\
                \
                if ( input$rbreligion == "allReligion")\
                \{\
                  filteredClickreli2 <- filteredPostcode2\
                \}\
                else\
                \{\
                  \
                  filteredClickreli2 <- filteredPostcode2 %>%\
                    filter( grepl(input$rbreligion, Religion))\
                  \
                \}\
                filteredClickreli2 <- as.data.frame( filteredClickreli2)\
                # file <- "LogoBlue3.png"\
                # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
                #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
                #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                #src = "allReligion.png", height = 40, width=80\
                #input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng\
                ### hear to show pic of place####\
                leaflet(data= filteredClickreli2) %>% addTiles() %>% \
                  addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                  #addTiles() %>%  addMarkers(~Longitude,~Latitude,popup =~paste0("<img src = ", URL, ">"))\
                  \
                  addEasyButton(easyButton(\
                    icon="fa-crosshairs", title="Locate Me",\
                    onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
                \
                #addMarkers(lng = ~Longitude, ~Latitude, popup = \
                #            ~paste0('https://www.google.com/maps/dir/', \
                #                   ~Latitude,",",~Longitude,"/",\
                #                  ~Latitude,",", \
                #                 ~Longitude))%>%\
                #addCircles(lng =  ~Longitude, lat = ~Latitude, popup = ~Name, label = "current location", color = "red", weight = 15)\
              \})\
            # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
            #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
            #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
            \
          \})\
          \
          \
        \})\
    \})\
  \})\
  #\})\
  \
  #click marker dt\
  observe(\{\
    \
    req(input$sitemap_marker_click)\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng)\
      \
      filteredClick <- as.data.frame(filteredClick)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        \
        options = list(\
          searching= FALSE,\
          #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          columnDefs = list(list(visible=FALSE, targets=c(10,11,12))),\
          scrollX = TRUE,\
          dom = 'Bfrtp',\
          pageLength=5,\
          buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    #Gmap\
    #  output$myGMap <- renderGoogle_map(\{\
    #   google_map(location = c(input$sitemap_marker_click$lat, input$sitemap_marker_click$lng), key = key, search_box = T,zoom = 12, split_view = "pano", street_view_control = TRUE,update_map_view = TRUE)\
    #  \})\
    \
    #https://maps.google.com/maps/contrib/105726604263661011813/photos\
    \
    \
    #religion \
  \}) \
  \
  \
  \
  \
\}\
\
#language\
\
\
# map$clearPopups()\
# map$showPopup(click$latitude, click$longtitude, text)\
\
\
\
\
\
# language\
\
\
\
\
\
shinyApp(ui, server)\
\
\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
library(shinyWidgets)\
\
\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(\
  \
  tags$head(tags$style(\
    HTML('\
         #sidebar \{\
         background-color: #222222;\
         \}\
         \
         body, label, input, button, select \{ \
         font-family: "Arial";\
         \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
    )),\
  \
  \
  sidebarLayout(\
    \
    #tags$head(tags$style(HTML('background-color: #222222'))),\
    #setBackgroundColor("#222222")\
    \
    sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
                 fluidRow(\
                   column(12,\
                          selectInput("Postcode",\
                                      HTML("<h3 style='color:white;'>Enter or select a postcode</h3>"),\
                                      c(\
                                        sort(unique(as.character(centers$Postcode)))),selected =2000),\
                          align='left'),align='left'),\
                 br(),\
                 \
                 \
                 selectInput("rbLanguage", HTML("<h3 style='color:white;'>Culture & Language the care center provides:</h3>"), \
                             c("English" = "English", \
                                "
\f1 \'d6\'d0\'ce\'c4
\f0 " = "Chinese" ,\
                               "Italiano" = "Italian",\
                               "
\f2 \uc0\u2361 \u2367 \u2344 \u2381 \u2342 \u2368 
\f0  " = "Hindi",\
                               "\uc0\u1056 \u1091 \u1089 \u1089 \u1082 \u1080 \u1081 " = "Russian",\
                               "Deutsche"="German", \
                               "\uc0\u917 \u955 \u955 \u951 \u957 \u953 \u954 \u940 " = "Greek",\
                               "Ti\uc0\u7871 ng Vi\u7879 t"="Vietnamese",\
                               "
\f1 \'c8\'d5\'b1\'be\'d5\'5a
\f0 " =  "Japanese",\
                               "
\f3 \'c7\'d1\'b1\'b9\'be\'ee
\f0 " = "Korean",\
                               "Espa\'f1ol" = "Spanish", \
                               "fran\'e7ais" = "French",\
                               " 
\f4 \'da\'d1\'c8\'ec
\f0 " = "Arabic" ,\
                               "All" = "English" \
                               \
                               ),selected = "English"\
                 ),\
                 br(),\
                 \
                 radioButtons("rbreligion",  HTML("<h3 style='color:white;'>Religion:</h3>"),\
                              choiceNames = list(\
                                HTML('<img id="img26" src="allReligion.png" height=40 px width=80 px"><label style="color:white">All</label></img>'),\
                                HTML('<img id="img26" src="Catholic.png" height=40 px width=80 px"><label style="color:white">Catholic</label></img>'),\
                                HTML('<img id="img26" src="Buddism.png" height=40 px width=80 px"><label style="color:white">Buddism</label></img>'),\
                                HTML('<img id="img26" src="Islam.png" height=40 px width=80 px"><label style="color:white">Islam</label></img>'),\
                                HTML('<img id="img26" src="Judaism.png" height=40 px width=80 px"><label style="color:white">Judaism</label></img>'),\
                                HTML('<img id="img26" src="Hinduism.png" height=40 px width=80 px"><label style="color:white">Hinduism</label></img>'),\
                                HTML('<img id="img26" src="Eastern_orthodox.png" height=40 px width=80 px"><label style="color:white">Eastern orthodox</label></img>'),\
                                HTML('<img id="img26" src="Lutheran.png" height=40 px width=80 px"><label style="color:white">Lutheran</label></img>')\
                                \
                              ),\
                              \
                              \
                              choiceValues = list(\
                                "allReligion","Catholic", "Buddism", "Islam","Judaism", "Hinduism", "Eastern Orthodox","Lutheran"\
                              ),selected="allReligion"\
                 )\
                 \
                 \
                 \
                 \
    ),\
    \
    \
    #h3( em("Home Care Centers in Australia"), align = "center")\
    #h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
    # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    # h4("1: Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
    # h4("2: To search for other culture and religion just type in the search box below the the map",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    \
    \
    # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
    # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
    #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    \
    #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      br(),\
     \
      leafletOutput("sitemap"),\
      \
      DT::dataTableOutput("table"),\
      tags$head(tags$style("#table \{background-color: white; \}", media="screen", type="text/css")),\
      h4("Click and select a name or address from the above table to search on Google", align = "left",style = "color:white",font="Times New Roman"),\
      # uiOutput(outputId = "ggoogle"),\
      # uiOutput("tab"),\
      fluidRow( \
        column(6, uiOutput("tab")),\
        column(6,uiOutput("tabggmap"))\
        )\
      # uiOutput(outputId = "ggmap"),\
      #uiOutput("tabggmap")\
      #verbatimTextOutput("selectedCells")\
      #box(google_mapOutput("myGMap") )\
      \
      \
    )  \
    \
  )\
  )\
\
server <- function(input, output) \{\
  \
\
  \
  output$ggmap <- renderUI(\{\
    \
    tags$img(HTML('<img id="img35" src="ggmap.png" height=150 px width=150 px"><label style="color:white"></label></img>'))\
    \
  \})\
  \
  output$ggoogle <- renderUI(\{\
    tags$img(HTML('<img id="img36" src="ggoogle.png" height=150 px width=150 px"><label style="color:white"></label></img>'))\
    \
  \})\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    \
    req(input$Postcode)\
    \
    \
    \
    output$table <- DT::renderDataTable(\{\
      \
      filteredPostcode <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
      filteredPostcode <- as.data.frame(filteredPostcode)\
      datatable(\
        filteredPostcode, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        \
        options = list(\
          searching=FALSE,\
          \
          # columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtp',\
          pageLength=5,\
          buttons = c('copy','pdf', 'print'),deferRender = TRUE,\
          scrollY = 200,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \
      \
      observe(\{\
        \
        req(input$rbLanguage)\
        \
        \
        output$table <- DT::renderDataTable(\{\
          \
          if ( input$rbLanguage == "English")\
          \{\
            filteredClickLan <- filteredPostcode\
          \}\
          else\
          \{\
            \
            filteredClickLan <- filteredPostcode %>%\
              filter( grepl(input$rbLanguage, Language ) | grepl(input$rbLanguage, Culture ))              \
          \}\
          \
          filteredClickLan <- as.data.frame(filteredClickLan)\
          datatable(\
            filteredClickLan, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
            rownames=FALSE,\
            #fixedHeader = TRUE,keys = TRUE,\
            #options = list(searchHighlight = TRUE)\
            #filter = 'top',\
            #dom = 'Bfrtip',\
            #searchHighlight = TRUE\
            \
            \
            options = list(\
              searching= FALSE,\
              #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
              scrollX = TRUE,\
              dom = 'Bfrtp',\
              pageLength=5,\
              buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
              scrollY = 150,\
              scroller = TRUE,\
              search = list( caseInsensitive = FALSE),\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
          ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            \
            formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \})\
        \
        # google map\
        #\
        \
        \
        \
      \})\
      \
      #religion dt\
      \
      observe(\{\
        \
        req(input$rbreligion)\
        \
        \
        output$table <- DT::renderDataTable(\{\
          \
          if ( input$rbreligion == "allReligion")\
          \{\
            filteredClickreli <- filteredPostcode\
          \}\
          else\
          \{\
            \
            filteredClickreli <- filteredPostcode %>%\
              filter( grepl(input$rbreligion, Religion) \
              )\
          \}\
          \
          filteredClickreli <- as.data.frame(filteredClickreli)\
          datatable(\
            filteredClickreli, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
            rownames=FALSE,\
            #fixedHeader = TRUE,keys = TRUE,\
            #options = list(searchHighlight = TRUE)\
            #filter = 'top',\
            #dom = 'Bfrtip',\
            #searchHighlight = TRUE\
            \
            \
            options = list(\
              searching= FALSE,\
              #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
              scrollX = TRUE,\
              dom = 'Bfrtp',\
              pageLength=5,\
              buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
              scrollY = 150,\
              scroller = TRUE,\
              search = list( caseInsensitive = FALSE),\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
          ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            \
            formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \})\
        \
      \})\
      \
      # dt cell - google map \
      \
      observe(\{\
        req(input$table_cell_clicked)\
        \
        # sstring <- "https://www.google.com/search?cr=countryAU&q="+input$table_cell_clicked\
        #https://www.google.com/search?cr=countryAU&q=St Louis Home Care\
        #https://www.google.com/maps/place/\
        output$selectedCells <- renderPrint(input$table_cell_clicked$value)\
        sstring <- paste("https://www.google.com/search?cr=countryAU&q=", as.character(input$table_cell_clicked$value))\
        \
       url <- a(as.character(input$table_cell_clicked$value), href= sstring,target="_blank")\
        \
        output$tab <- renderUI(\{\
          tagList( HTML("<h3 style='color:white; align ='center'>Search on Google</h3>"), url)\
        \}) # HTML("<p style='color:blue;'>English</p>"),\
        \
        sstring2 <- paste("https://www.google.com/maps/place/", as.character(input$table_cell_clicked$value))\
       # url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2)\
        url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2, target="_blank")\
        output$tabggmap <- renderUI(\{\
          tagList(HTML("<h3 style='color:white; align ='center'>Search on Google Map</h3>"), url2)\
        \})\
        \
        \
        \
        # https://www.google.com/search?cr=countryAU&q=monash\
        \
        # centersfiltered <- filteredPostcode %>% filter(No == input$table_cell_clicked$value)\
        \
      \})\
      \
      \
      \
      \
    \})\
    \
    \
    # output$selectedCells <- renderPrint(input$table_rows_selected)\
    #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
    \
    #\
    \
    #\
    \
    #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
    #\
    \
    #postcode leaflet\
    \
    observe(\{\
      \
      req(input$Postcode)\
      \
      output$sitemap = renderLeaflet(\
        \{\
          filteredPostcode2 <- centers %>%\
            filter(\
              Postcode == input$Postcode)\
          \
          # file <- "LogoBlue3.png"\
          #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
          #URL <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
          #  URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
          \
          filteredPostcode2 <- as.data.frame(filteredPostcode2)\
          leaflet(data=filteredPostcode2) %>% \
            addTiles() %>%  \
            addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
            #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
            #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
            # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL, ">"))%>%\
            \
            \
            addEasyButton(easyButton(\
              icon="fa-crosshairs", title="Locate Me",\
              onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \
          \
          #lan\
          observe(\{\
            # click <- input$rb,input$Postcode,\
            req(input$rbLanguage)\
            \
            \
            #print(click)\
            \
            output$sitemap = renderLeaflet(\
              \{\
                \
                if ( input$rbLanguage == "English") \
                \{\
                  filteredClickLan <- filteredPostcode2\
                \}\
                else\
                \{\
                  \
                  filteredClickLan <- filteredPostcode2 %>%\
                    filter( grepl(input$rbLanguage, Language ) | grepl(input$rbLanguage, Culture ))\
                    #)\
                \}\
                filteredClickLan <- as.data.frame(filteredClickLan)\
                # file <- "LogoBlue3.png"\
                # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
                #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
                \
                #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                # img(id="img26",src = "allReligion.png", height = 40, width=80),\
                \
                leaflet(data=filteredClickLan) %>% \
                  addTiles() %>%  \
                  addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                  #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                  # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
                  \
                  addEasyButton(easyButton(\
                    icon="fa-crosshairs", title="Locate Me",\
                    onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \})\
            \
            \
          \})\
          \
          # religion leaflet\
          observe(\{\
            # click <- input$rb,input$Postcode,\
            req(input$rbreligion)\
            \
            \
            #print(click)\
            \
            output$sitemap = renderLeaflet(\
              \{\
                \
                if ( input$rbreligion == "allReligion")\
                \{\
                  filteredClickreli2 <- filteredPostcode2\
                \}\
                else\
                \{\
                  \
                  filteredClickreli2 <- filteredPostcode2 %>%\
                    filter( grepl(input$rbreligion, Religion))\
                  \
                \}\
                filteredClickreli2 <- as.data.frame( filteredClickreli2)\
                # file <- "LogoBlue3.png"\
                # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
                #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
                #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                #src = "allReligion.png", height = 40, width=80\
                #input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng\
                ### hear to show pic of place####\
                leaflet(data= filteredClickreli2) %>% addTiles() %>% \
                  addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                  #addTiles() %>%  addMarkers(~Longitude,~Latitude,popup =~paste0("<img src = ", URL, ">"))\
                  \
                  addEasyButton(easyButton(\
                    icon="fa-crosshairs", title="Locate Me",\
                    onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
                \
                #addMarkers(lng = ~Longitude, ~Latitude, popup = \
                #            ~paste0('https://www.google.com/maps/dir/', \
                #                   ~Latitude,",",~Longitude,"/",\
                #                  ~Latitude,",", \
                #                 ~Longitude))%>%\
                #addCircles(lng =  ~Longitude, lat = ~Latitude, popup = ~Name, label = "current location", color = "red", weight = 15)\
              \})\
            # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
            #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
            #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
            \
          \})\
          \
          \
        \})\
    \})\
  \})\
  #\})\
  \
  #click marker dt\
  observe(\{\
    \
    req(input$sitemap_marker_click)\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng)\
      \
      filteredClick <- as.data.frame(filteredClick)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        \
        options = list(\
          searching= FALSE,\
          #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtp',\
          pageLength=5,\
          buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    #Gmap\
    #  output$myGMap <- renderGoogle_map(\{\
    #   google_map(location = c(input$sitemap_marker_click$lat, input$sitemap_marker_click$lng), key = key, search_box = T,zoom = 12, split_view = "pano", street_view_control = TRUE,update_map_view = TRUE)\
    #  \})\
    \
    #https://maps.google.com/maps/contrib/105726604263661011813/photos\
    \
    \
    #religion \
  \}) \
  \
  \
  \
  \
\}\
\
#language\
\
\
# map$clearPopups()\
# map$showPopup(click$latitude, click$longtitude, text)\
\
\
\
\
\
# language\
\
\
\
\
\
shinyApp(ui, server)\
\
\
\
\
\
\
#old\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
library(shinyWidgets)\
\
\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(\
  \
  tags$head(tags$style(\
    HTML('\
         #sidebar \{\
         background-color: #222222;\
         \}\
         \
         body, label, input, button, select \{ \
         font-family: "Arial";\
         \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
    )),\
  \
  \
  sidebarLayout(\
    \
    #tags$head(tags$style(HTML('background-color: #222222'))),\
    #setBackgroundColor("#222222")\
    \
    sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
                 \
                 radioButtons("rbLanguage",  HTML("<h3 style='color:white;'>Culture & Language the care center provides:</h3>"),\
                              choiceNames = list(\
                               \
                                HTML("<p style='color:white;'>English</p>"),\
                                HTML("<p style='color:white;'>
\f1 \'d6\'d0\'ce\'c4
\f0 </p>"),\
                                HTML("<p style='color:white;'>Italiano</p>"),\
                                HTML("<p style='color:white;'>
\f2 \uc0\u2361 \u2367 \u2306 \u2342 \u2368 
\f0 </p>"),\
                                HTML("<p style='color:white;'>\uc0\u1056 \u1091 \u1089 \u1089 \u1082 \u1080 \u1081 </p>"),\
                                HTML("<p style='color:white;'>Deutsche</p>"),\
                                HTML("<p style='color:white;'>\uc0\u917 \u955 \u955 \u951 \u957 \u953 \u954 \u940 </p>"),\
                                HTML("<p style='color:white;'> Ti\uc0\u7871 ng Vi\u7879 t</p>"),\
                                HTML("<p style='color:white;'>
\f1 \'c8\'d5\'b1\'be\'d5\'5a
\f0 </p>"), \
                                HTML("<p style='color:white;'>
\f3 \'c7\'d1\'b1\'b9\'be\'ee
\f0 </p>"),\
                                HTML("<p style='color:white;'>Espa\'f1ol</p>"),\
                                HTML("<p style='color:white;'> fran\'e7ais</p>"),\
                                HTML("<p style='color:white;'> 
\f4 \'da\'d1\'c8\'ec
\f0 </p>"),\
                                HTML("<p style='color:white;'>All</p>")\
                                #  HTML("<p style='color:white;'>All</p>")\
                                #img(id="img9",src = "English.png", height = 40, width=80),\
                                #img(id="img10",src = "Italian.png", height = 40, width=80),\
                                #img(id="img11",src = "Chinese.png", height = 40, width=80),\
                              ),\
                              choiceValues = list(\
                                "English","Chinese","Italian","Hindi","Russian","German","Greek","Vietnamese","Japanese","Korean","Spanish","French","Arabic","English"\
                              ),selected="English"\
                 ),\
                 radioButtons("rbreligion",  HTML("<h3 style='color:white;'>Religion:</h3>"),\
                              choiceNames = list(\
                                HTML('<img id="img26" src="allReligion.png" height=40 px width=80 px"><label style="color:white">All</label></img>'),\
                                HTML('<img id="img26" src="Catholic.png" height=40 px width=80 px"><label style="color:white">Catholic</label></img>'),\
                                HTML('<img id="img26" src="Buddism.png" height=40 px width=80 px"><label style="color:white">Buddism</label></img>'),\
                                HTML('<img id="img26" src="Islam.png" height=40 px width=80 px"><label style="color:white">Islam</label></img>'),\
                                HTML('<img id="img26" src="Judaism.png" height=40 px width=80 px"><label style="color:white">Judaism</label></img>'),\
                                HTML('<img id="img26" src="Hinduism.png" height=40 px width=80 px"><label style="color:white">Hinduism</label></img>'),\
                                HTML('<img id="img26" src="Eastern_orthodox.png" height=40 px width=80 px"><label style="color:white">Eastern orthodox</label></img>'),\
                                HTML('<img id="img26" src="Lutheran.png" height=40 px width=80 px"><label style="color:white">Lutheran</label></img>')\
                                \
                              ),\
                              \
                              \
                              choiceValues = list(\
                                "allReligion","Catholic", "Buddism", "Islam","Judaism", "Hinduism", "Eastern Orthodox","Lutheran"\
                              ),selected="allReligion"\
                 )\
                 \
                 \
                 \
                 \
    ),\
    \
    \
    #h3( em("Home Care Centers in Australia"), align = "center")\
    #h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
    # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    # h4("1: Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
    # h4("2: To search for other culture and religion just type in the search box below the the map",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    \
    \
    # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
    # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
    #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
    \
    \
    #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
        \
        column(4,\
               selectInput("Postcode",\
                           HTML("<h3 style='color:white;'>Postcode</h3>"),\
                           c(\
                             sort(unique(as.character(centers$Postcode)))),selected =2000),\
               align='center'),align='center'),\
      \
      leafletOutput("sitemap"),\
      br(),\
      \
      \
      \
      DT::dataTableOutput("table"),\
      tags$head(tags$style("#table \{background-color: white; \}", media="screen", type="text/css")),\
      \
      h3("Click and select a name or address from the above table to search on Google", align = "left",style = "color:white",font="Times New Roman"),\
      # uiOutput(outputId = "ggoogle"),\
      \
      # uiOutput("tab"),\
      fluidRow( \
        column(6, uiOutput("tab"),uiOutput(outputId = "ggoogle")),\
        column(6,uiOutput("tabggmap"),uiOutput(outputId = "ggmap")\
        )) \
      # uiOutput(outputId = "ggmap"),\
      #uiOutput("tabggmap")\
      #verbatimTextOutput("selectedCells")\
      #box(google_mapOutput("myGMap") )\
      \
      \
    )  \
    \
  )\
  )\
\
server <- function(input, output) \{\
  \
\
  \
  output$ggmap <- renderUI(\{\
    \
    tags$img(HTML('<img id="img35" src="ggmap.png" height=150 px width=150 px"><label style="color:white"></label></img>'))\
    \
  \})\
  \
  output$ggoogle <- renderUI(\{\
    tags$img(HTML('<img id="img36" src="ggoogle.png" height=150 px width=150 px"><label style="color:white"></label></img>'))\
    \
  \})\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    \
    req(input$Postcode)\
    \
    \
    \
    output$table <- DT::renderDataTable(\{\
      \
      filteredPostcode <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
      filteredPostcode <- as.data.frame(filteredPostcode)\
      datatable(\
        filteredPostcode, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        \
        options = list(\
          searching=FALSE,\
          \
          # columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtp',\
          pageLength=5,\
          buttons = c('copy','pdf', 'print'),deferRender = TRUE,\
          scrollY = 200,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \
      \
      observe(\{\
        \
        req(input$rbLanguage)\
        \
        \
        output$table <- DT::renderDataTable(\{\
          \
          if ( input$rbLanguage == "English")\
          \{\
            filteredClickLan <- filteredPostcode\
          \}\
          else\
          \{\
            \
            filteredClickLan <- filteredPostcode %>%\
              filter( grepl(input$rbLanguage, Language ) | grepl(input$rbLanguage, Culture ))              \
          \}\
          \
          filteredClickLan <- as.data.frame(filteredClickLan)\
          datatable(\
            filteredClickLan, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
            rownames=FALSE,\
            #fixedHeader = TRUE,keys = TRUE,\
            #options = list(searchHighlight = TRUE)\
            #filter = 'top',\
            #dom = 'Bfrtip',\
            #searchHighlight = TRUE\
            \
            \
            options = list(\
              searching= FALSE,\
              #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
              scrollX = TRUE,\
              dom = 'Bfrtp',\
              pageLength=5,\
              buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
              scrollY = 150,\
              scroller = TRUE,\
              search = list( caseInsensitive = FALSE),\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
          ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            \
            formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \})\
        \
        # google map\
        #\
        \
        \
        \
      \})\
      \
      #religion dt\
      \
      observe(\{\
        \
        req(input$rbreligion)\
        \
        \
        output$table <- DT::renderDataTable(\{\
          \
          if ( input$rbreligion == "allReligion")\
          \{\
            filteredClickreli <- filteredPostcode\
          \}\
          else\
          \{\
            \
            filteredClickreli <- filteredPostcode %>%\
              filter( grepl(input$rbreligion, Religion) \
              )\
          \}\
          \
          filteredClickreli <- as.data.frame(filteredClickreli)\
          datatable(\
            filteredClickreli, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
            rownames=FALSE,\
            #fixedHeader = TRUE,keys = TRUE,\
            #options = list(searchHighlight = TRUE)\
            #filter = 'top',\
            #dom = 'Bfrtip',\
            #searchHighlight = TRUE\
            \
            \
            options = list(\
              searching= FALSE,\
              #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
              scrollX = TRUE,\
              dom = 'Bfrtp',\
              pageLength=5,\
              buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
              scrollY = 150,\
              scroller = TRUE,\
              search = list( caseInsensitive = FALSE),\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
          ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            \
            formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \})\
        \
      \})\
      \
      # dt cell - google map \
      \
      observe(\{\
        req(input$table_cell_clicked)\
        \
        # sstring <- "https://www.google.com/search?cr=countryAU&q="+input$table_cell_clicked\
        #https://www.google.com/search?cr=countryAU&q=St Louis Home Care\
        #https://www.google.com/maps/place/\
        output$selectedCells <- renderPrint(input$table_cell_clicked$value)\
        sstring <- paste("https://www.google.com/search?cr=countryAU&q=", as.character(input$table_cell_clicked$value))\
        \
       url <- a(as.character(input$table_cell_clicked$value), href= sstring,target="_blank")\
        \
        output$tab <- renderUI(\{\
          tagList( HTML("<h3 style='color:white; align ='center'>Search on Google</h3>"), url)\
        \}) # HTML("<p style='color:blue;'>English</p>"),\
        \
        sstring2 <- paste("https://www.google.com/maps/place/", as.character(input$table_cell_clicked$value))\
       # url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2)\
        url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2, target="_blank")\
        output$tabggmap <- renderUI(\{\
          tagList(HTML("<h3 style='color:white; align ='center'>Search on Google Map</h3>"), url2)\
        \})\
        \
        \
        \
        # https://www.google.com/search?cr=countryAU&q=monash\
        \
        # centersfiltered <- filteredPostcode %>% filter(No == input$table_cell_clicked$value)\
        \
      \})\
      \
      \
      \
      \
    \})\
    \
    \
    # output$selectedCells <- renderPrint(input$table_rows_selected)\
    #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
    \
    #\
    \
    #\
    \
    #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
    #\
    \
    #postcode leaflet\
    \
    observe(\{\
      \
      req(input$Postcode)\
      \
      output$sitemap = renderLeaflet(\
        \{\
          filteredPostcode2 <- centers %>%\
            filter(\
              Postcode == input$Postcode)\
          \
          # file <- "LogoBlue3.png"\
          #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
          #URL <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
          #  URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
          \
          filteredPostcode2 <- as.data.frame(filteredPostcode2)\
          leaflet(data=filteredPostcode2) %>% \
            addTiles() %>%  \
            addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
            #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
            #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
            # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL, ">"))%>%\
            \
            \
            addEasyButton(easyButton(\
              icon="fa-crosshairs", title="Locate Me",\
              onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \
          \
          #lan\
          observe(\{\
            # click <- input$rb,input$Postcode,\
            req(input$rbLanguage)\
            \
            \
            #print(click)\
            \
            output$sitemap = renderLeaflet(\
              \{\
                \
                if ( input$rbLanguage == "English") \
                \{\
                  filteredClickLan <- filteredPostcode2\
                \}\
                else\
                \{\
                  \
                  filteredClickLan <- filteredPostcode2 %>%\
                    filter( grepl(input$rbLanguage, Language ) | grepl(input$rbLanguage, Culture ))\
                    #)\
                \}\
                filteredClickLan <- as.data.frame(filteredClickLan)\
                # file <- "LogoBlue3.png"\
                # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
                #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
                \
                #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                # img(id="img26",src = "allReligion.png", height = 40, width=80),\
                \
                leaflet(data=filteredClickLan) %>% \
                  addTiles() %>%  \
                  addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                  #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                  # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
                  \
                  addEasyButton(easyButton(\
                    icon="fa-crosshairs", title="Locate Me",\
                    onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \})\
            \
            \
          \})\
          \
          # religion leaflet\
          observe(\{\
            # click <- input$rb,input$Postcode,\
            req(input$rbreligion)\
            \
            \
            #print(click)\
            \
            output$sitemap = renderLeaflet(\
              \{\
                \
                if ( input$rbreligion == "allReligion")\
                \{\
                  filteredClickreli2 <- filteredPostcode2\
                \}\
                else\
                \{\
                  \
                  filteredClickreli2 <- filteredPostcode2 %>%\
                    filter( grepl(input$rbreligion, Religion))\
                  \
                \}\
                filteredClickreli2 <- as.data.frame( filteredClickreli2)\
                # file <- "LogoBlue3.png"\
                # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
                #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
                #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                #src = "allReligion.png", height = 40, width=80\
                #input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng\
                ### hear to show pic of place####\
                leaflet(data= filteredClickreli2) %>% addTiles() %>% \
                  addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                  #addTiles() %>%  addMarkers(~Longitude,~Latitude,popup =~paste0("<img src = ", URL, ">"))\
                  \
                  addEasyButton(easyButton(\
                    icon="fa-crosshairs", title="Locate Me",\
                    onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
                \
                #addMarkers(lng = ~Longitude, ~Latitude, popup = \
                #            ~paste0('https://www.google.com/maps/dir/', \
                #                   ~Latitude,",",~Longitude,"/",\
                #                  ~Latitude,",", \
                #                 ~Longitude))%>%\
                #addCircles(lng =  ~Longitude, lat = ~Latitude, popup = ~Name, label = "current location", color = "red", weight = 15)\
              \})\
            # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
            #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
            #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
            \
          \})\
          \
          \
        \})\
    \})\
  \})\
  #\})\
  \
  #click marker dt\
  observe(\{\
    \
    req(input$sitemap_marker_click)\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng)\
      \
      filteredClick <- as.data.frame(filteredClick)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        \
        options = list(\
          searching= FALSE,\
          #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtp',\
          pageLength=5,\
          buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    #Gmap\
    #  output$myGMap <- renderGoogle_map(\{\
    #   google_map(location = c(input$sitemap_marker_click$lat, input$sitemap_marker_click$lng), key = key, search_box = T,zoom = 12, split_view = "pano", street_view_control = TRUE,update_map_view = TRUE)\
    #  \})\
    \
    #https://maps.google.com/maps/contrib/105726604263661011813/photos\
    \
    \
    #religion \
  \}) \
  \
  \
  \
  \
\}\
\
#language\
\
\
# map$clearPopups()\
# map$showPopup(click$latitude, click$longtitude, text)\
\
\
\
\
\
# language\
\
\
\
\
\
shinyApp(ui, server)\
\
\
\
\
\
\
\
\
\pard\pardeftab720\sl280\partightenfactor0

\f5 \cf2 \expnd0\expndtw0\kerning0
#not work\
\
library(shiny)\
library(datasets)\
library(magrittr) # need to run every time you start R and want to use %>%\
library(dplyr)    # alternative, this also loads %>%\
library(ggplot2)\
library(shinyWidgets)\
dementiaData = read.csv("State-Territory-Dementia.csv",header = T)\
cost = read.csv("costComparison.csv",header=T)\
\
\
ui <- navbarPage(setBackgroundColor("#222222"),\
                 tags$head(tags$style(\
                   HTML('\
                        #sidebar \{\
                        background-color: #222222;\
                        \},\
                        \
                        body, label, input, button, select \{ \
                        font-family: "Arial";\
                        \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
                   )),\
  \
  \
  title = 'Home care centers', id = 'x0',\
  \
  tabPanel('Cost',\
           \
           \
           \
           sidebarLayout(\
             sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
                          \
                          radioButtons("rbState",  HTML("<h3 style='color:white;'>State or region:</h3>"),\
                                       choiceNames = list(\
                                         HTML('<img id="img1" src="NSW.png" height=80 px width=80 px"><label style="color:white">NSW</label></img>'),\
                                         HTML('<img id="img2" src="VIC.png" height=80 px width=80 px"><label style="color:white">VIC</label></img>'),\
                                         HTML('<img id="img3" src="QLD.png" height=80 px width=80 px"><label style="color:white">QLD</label></img>'),\
                                         HTML('<img id="img4" src="WA.png" height=80 px width=80 px"><label style="color:white">WA</label></img>'),\
                                         HTML('<img id="img5" src="SA.png" height=80 px width=80 px"><label style="color:white">SA</label></img>'),\
                                         HTML('<img id="img6" src="TAS.png" height=80 px width=80 px"><label style="color:white">TAS</label></img>'),\
                                         HTML('<img id="img7" src="ACT.png" height=80 px width=80 px"><label style="color:white">ACT</label></img>'),\
                                         HTML('<img id="img8" src="NT.png" height=80 px width=80 px"><label style="color:white">NT</label></img>'),\
                                         HTML('<img id="img9" src="allAu.png" height=80 px width=80 px"><label style="color:white">All</label></img>')\
                                         \
                                         \
                                       ),\
                                       choiceValues = list(\
                                         "NSW", "Vic", "Qld","WA", "SA", "Tas","ACT","NT","Show all states"\
                                       ),selected="NSW"\
                          ),\
                          radioButtons("rbreason",  HTML("<h3 style='color:white;'>Reasons for hospital care:</h3>"),\
                                       choiceNames = list(\
                                         \
                                         HTML("<p style='color:white;'>Admit for Renal Dialysis</p>"),\
                                         HTML("<p style='color:white;'>Rehabilitation</p>"),\
                                         HTML("<p style='color:white;'>Dementia and Other Chronic Disturbances of Cerebral Function</p>"),\
                                         HTML("<p style='color:white;'>Respiratory Infections/Inflammations</p>"),\
                                         HTML("<p style='color:white;'>Other Factors Influencing Health Status</p>"),\
                                         HTML("<p style='color:white;'>Kidney and Urinary Tract Infections</p>"),\
                                         HTML("<p style='color:white;'>Injuries</p>"),\
                                         HTML("<p style='color:white;'>Heart Failure and Shock</p>"),\
                                         HTML("<p style='color:white;'>Oesophagitis, Gastroenteritis and Misc Digestive System Disorders Age >9</p>"), \
                                         HTML("<p style='color:white;'>Stroke</p>"),\
                                         HTML("<p style='color:white;'>Other hip and femur procedures</p>"),\
                                         HTML("<p style='color:white;'> Chronic obstructive airways disease</p>"),\
                                         HTML("<p style='color:white;'>Syncope and collapse</p>"),\
                                         HTML("<p style='color:white;'>Delirium</p>"),\
                                         \
                                         HTML("<p style='color:white;'>Septicaemia</p>"),\
                                         HTML("<p style='color:white;'>Chest pain</p>"), \
                                         HTML("<p style='color:white;'>Other disorders of the nervous system</p>"),\
                                         HTML("<p style='color:white;'> Hip revision or replacement</p>"),\
                                         HTML("<p style='color:white;'> Non-surgical spinal disorders</p>"),\
                                         HTML("<p style='color:white;'>Cellulitis</p>"),\
                                         HTML("<p style='color:white;'>All</p>")\
                                         \
                                         \
                                         #img(id="img9",src = "English.png", height = 40, width=80),\
                                         #img(id="img10",src = "Italian.png", height = 40, width=80),\
                                         #img(id="img11",src = "Chinese.png", height = 40, width=80),\
                                       ),\
                                       choiceValues = list("Admit for Renal Dialysis","Rehabilitation","Dementia and Other Chronic Disturbances of Cerebral Function",\
                                                           "Respiratory Infections/Inflammations","Other Factors Influencing Health Status",\
                                                           "Kidney and Urinary Tract Infections",\
                                                           \
                                                           "Injuries","Heart Failure and Shock","Oesophagitis, Gastroenteritis and Misc Digestive System Disorders Age >9","Stroke",\
                                                           "Other hip and femur procedures","Chronic obstructive airways disease","Syncope and collapse","Delirium","Septicaemia",\
                                                           "Chest pain", "Other disorders of the nervous system", "Hip revision or replacement","Non-surgical spinal disorders",\
                                                           "Cellulitis","Show all reasons"\
                                       ),selected="Admit for Renal Dialysis"\
                          )\
             ),\
             \
             mainPanel(\
               \
               \
               \
               br(),\
               HTML("<h1 style='color:white'; align='center'>Number of people with dementia in Australia</h1>"),\
               #headerPanel("Number of people with dementia in Australia"), \
               br(),\
               br(),\
               \
               br(),\
               br(),\
               br(),\
               \
               br(),\
               \
               plotOutput("coolplot"),\
               br(),\
               br(),\
               br(),\
               br(),\
               br(),\
               \
               br(),\
               br(),\
               br(),\
               br(),\
               \
               br(),\
               HTML("<h1 style='color:white'; align='center'>Average hospital care costs comparison between people with and without dementia</h1>"),\
               br(),\
               br(),\
               br(),\
               br(),\
               \
               br(),\
               br(),\
               \
               plotOutput("costplot")\
               \
               \
               \
               \
             )\
           \
           \
           \
           \
           \
           \
           \
           \
           \
           \
           \
  ),\
  tabPanel('Growth', \
           \
           sidebarLayout(\
             sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
                          \
                          radioButtons("rbState",  HTML("<h3 style='color:white;'>State or region:</h3>"),\
                                       choiceNames = list(\
                                         HTML('<img id="img1" src="NSW.png" height=80 px width=80 px"><label style="color:white">NSW</label></img>'),\
                                         HTML('<img id="img2" src="VIC.png" height=80 px width=80 px"><label style="color:white">VIC</label></img>'),\
                                         HTML('<img id="img3" src="QLD.png" height=80 px width=80 px"><label style="color:white">QLD</label></img>'),\
                                         HTML('<img id="img4" src="WA.png" height=80 px width=80 px"><label style="color:white">WA</label></img>'),\
                                         HTML('<img id="img5" src="SA.png" height=80 px width=80 px"><label style="color:white">SA</label></img>'),\
                                         HTML('<img id="img6" src="TAS.png" height=80 px width=80 px"><label style="color:white">TAS</label></img>'),\
                                         HTML('<img id="img7" src="ACT.png" height=80 px width=80 px"><label style="color:white">ACT</label></img>'),\
                                         HTML('<img id="img8" src="NT.png" height=80 px width=80 px"><label style="color:white">NT</label></img>'),\
                                         HTML('<img id="img9" src="allAu.png" height=80 px width=80 px"><label style="color:white">All</label></img>')\
                                         \
                                         \
                                       ),\
                                       choiceValues = list(\
                                         "NSW", "Vic", "Qld","WA", "SA", "Tas","ACT","NT","Show all states"\
                                       ),selected="NSW"\
                          ),\
                          radioButtons("rbreason",  HTML("<h3 style='color:white;'>Reasons for hospital care:</h3>"),\
                                       choiceNames = list(\
                                         \
                                         HTML("<p style='color:white;'>Admit for Renal Dialysis</p>"),\
                                         HTML("<p style='color:white;'>Rehabilitation</p>"),\
                                         HTML("<p style='color:white;'>Dementia and Other Chronic Disturbances of Cerebral Function</p>"),\
                                         HTML("<p style='color:white;'>Respiratory Infections/Inflammations</p>"),\
                                         HTML("<p style='color:white;'>Other Factors Influencing Health Status</p>"),\
                                         HTML("<p style='color:white;'>Kidney and Urinary Tract Infections</p>"),\
                                         HTML("<p style='color:white;'>Injuries</p>"),\
                                         HTML("<p style='color:white;'>Heart Failure and Shock</p>"),\
                                         HTML("<p style='color:white;'>Oesophagitis, Gastroenteritis and Misc Digestive System Disorders Age >9</p>"), \
                                         HTML("<p style='color:white;'>Stroke</p>"),\
                                         HTML("<p style='color:white;'>Other hip and femur procedures</p>"),\
                                         HTML("<p style='color:white;'> Chronic obstructive airways disease</p>"),\
                                         HTML("<p style='color:white;'>Syncope and collapse</p>"),\
                                         HTML("<p style='color:white;'>Delirium</p>"),\
                                         \
                                         HTML("<p style='color:white;'>Septicaemia</p>"),\
                                         HTML("<p style='color:white;'>Chest pain</p>"), \
                                         HTML("<p style='color:white;'>Other disorders of the nervous system</p>"),\
                                         HTML("<p style='color:white;'> Hip revision or replacement</p>"),\
                                         HTML("<p style='color:white;'> Non-surgical spinal disorders</p>"),\
                                         HTML("<p style='color:white;'>Cellulitis</p>"),\
                                         HTML("<p style='color:white;'>All</p>")\
                                         \
                                         \
                                         #img(id="img9",src = "English.png", height = 40, width=80),\
                                         #img(id="img10",src = "Italian.png", height = 40, width=80),\
                                         #img(id="img11",src = "Chinese.png", height = 40, width=80),\
                                       ),\
                                       choiceValues = list("Admit for Renal Dialysis","Rehabilitation","Dementia and Other Chronic Disturbances of Cerebral Function",\
                                                           "Respiratory Infections/Inflammations","Other Factors Influencing Health Status",\
                                                           "Kidney and Urinary Tract Infections",\
                                                           \
                                                           "Injuries","Heart Failure and Shock","Oesophagitis, Gastroenteritis and Misc Digestive System Disorders Age >9","Stroke",\
                                                           "Other hip and femur procedures","Chronic obstructive airways disease","Syncope and collapse","Delirium","Septicaemia",\
                                                           "Chest pain", "Other disorders of the nervous system", "Hip revision or replacement","Non-surgical spinal disorders",\
                                                           "Cellulitis","Show all reasons"\
                                       ),selected="Admit for Renal Dialysis"\
                          )\
             ),\
             \
             mainPanel(\
               \
               \
               \
               br(),\
               HTML("<h1 style='color:white'; align='center'>Number of people with dementia in Australia</h1>"),\
               #headerPanel("Number of people with dementia in Australia"), \
               br(),\
               br(),\
               \
               br(),\
               br(),\
               br(),\
               \
               br(),\
               \
               plotOutput("coolplot"),\
               br(),\
               br(),\
               br(),\
               br(),\
               br(),\
               \
               br(),\
               br(),\
               br(),\
               br(),\
               \
               br(),\
               HTML("<h1 style='color:white'; align='center'>Average hospital care costs comparison between people with and without dementia</h1>"),\
               br(),\
               br(),\
               br(),\
               br(),\
               \
               br(),\
               br(),\
               \
               plotOutput("costplot")\
               \
               \
               \
               \
             )\
           \
           \
           \
           \
  )\
)))\
\
\
\
server <- function(input, output) \{\
  output$coolplot <- renderPlot(\
    \
  \
    \
    \{\
      if(input$rbState == "Show all states")\
      \{\
        ggplot(dementiaData,aes(Year,Number,colour=State)) + \
          geom_line() + geom_text(aes(label = Number, y = Number,fontface = "bold"),check_overlap = TRUE,size=4,color="Black")\
      \}\
      else\
      \{\
    filtered <-\
      dementiaData %>%\
      filter(\
        State == input$rbState\
        \
      )\
    \
   \
    ggplot(filtered,aes(Year,Number,label=Number)) + \
      geom_point(aes(color=State)) + facet_wrap(~State) + geom_smooth(method = "lm", formula = y ~ x, size = 1) +  geom_text(aes(label = Number, y = Number,fontface = "bold"), ,check_overlap = TRUE,size=4)\
     \
    \
    \
  \}\})\
  \
  \
  \
  output$costplot <- renderPlot(\{\
    \
    if(input$rbreason == "Show all reasons")\
    \{\
      ggplot(data=cost, aes(x=Reason, y=cost, fill=status,label=cost)) +\
        geom_bar(stat="identity", position=position_dodge(), size = 1) +   geom_text(aes(label = cost, y = cost,fontface = "bold"),check_overlap = TRUE,size=4)  +\
                                                                                       coord_flip()  \
      \
    \}\
    else\
    \{\
    \
    \
    \
    filteredcost <-\
      cost %>%\
      filter(\
        Reason== input$rbreason\
        \
      )\
    \
    \
    ggplot(data=filteredcost, aes(x=Reason, y=cost, fill=status,label=cost)) +\
      geom_bar(stat="identity", position=position_dodge(), size = 1) +   geom_text(aes(label = cost, y = cost,fontface = "bold"),check_overlap = TRUE,size=5, position=position_dodge(width=0.9), vjust=-0.25)  \
    \
    \
    \
    \
    \
    \
    \
  \}\})\
  \
  \
\
\}\
\
\
shinyApp(ui = ui, server = server)\
\
\
\
\
\
\
\
\
\
\
\
\
#language X\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
library(shinyWidgets)\
\
\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(\
  \
  tags$head(tags$style(\
    HTML('\
         #sidebar \{\
         background-color: #222222;\
         \}\
         \
         body, label, input, button, select \{ \
         font-family: "Arial";\
         \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
    )),\
                                           \
  \
  sidebarLayout(\
    \
    #tags$head(tags$style(HTML('background-color: #222222'))),\
    \
    sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
                 \
               radioButtons("rbLanguage",  HTML("<h3 style='color:white;'>Culture & Language:</h3>"),\
                            choiceNames = list(\
                              HTML("<p style='color:white;'>English</p>"),\
                              HTML("<p style='color:white;'>
\f6 \'d6\'d0\'ce\'c4
\f5 </p>"),\
                              HTML("<p style='color:white;'>Italiano</p>"),\
                              HTML("<p style='color:white;'>
\f7 \uc0\u2361 \u2367 \u2306 \u2342 \u2368 
\f5 </p>"),\
                              HTML("<p style='color:white;'>\uc0\u1056 \u1091 \u1089 \u1089 \u1082 \u1080 \u1081 </p>"),\
                              HTML("<p style='color:white;'>Deutsche</p>"),\
                              HTML("<p style='color:white;'>\uc0\u917 \u955 \u955 \u951 \u957 \u953 \u954 \u940 </p>"),\
                              HTML("<p style='color:white;'> Ti\uc0\u7871 ng Vi\u7879 t</p>"),\
                              HTML("<p style='color:white;'>
\f6 \'c8\'d5\'b1\'be\'d5\'5a
\f5 </p>"), \
                              HTML("<p style='color:white;'>
\f8 \'c7\'d1\'b1\'b9\'be\'ee
\f5 </p>"),\
                              HTML("<p style='color:white;'>Espa\'f1ol</p>"),\
                              HTML("<p style='color:white;'> fran\'e7ais</p>"),\
                              HTML("<p style='color:white;'> 
\f4 \'da\'d1\'c8\'ec
\f5 </p>")\
                            #  HTML("<p style='color:white;'>All</p>")\
                              #img(id="img9",src = "English.png", height = 40, width=80),\
                              #img(id="img10",src = "Italian.png", height = 40, width=80),\
                              #img(id="img11",src = "Chinese.png", height = 40, width=80),\
                            ),\
                            choiceValues = list(\
                              "English","Chinese","Italian","Hindi","Russian","German","Greek","Vietnamese","Japanese","Korean","Spanish","French","Arabic"\
                            ),selected="English"\
               ),\
               radioButtons("rbreligion",  HTML("<h3 style='color:white;'>Religion:</h3>"),\
                            choiceNames = list(\
                              HTML('<img id="img26" src="allReligion.png" height=40 px width=80 px"><label style="color:white">All</label></img>'),\
                              HTML('<img id="img26" src="Catholic.png" height=40 px width=80 px"><label style="color:white">Catholic</label></img>'),\
                              HTML('<img id="img26" src="Buddism.png" height=40 px width=80 px"><label style="color:white">Buddism</label></img>'),\
                              HTML('<img id="img26" src="Islam.png" height=40 px width=80 px"><label style="color:white">Islam</label></img>'),\
                              HTML('<img id="img26" src="Judaism.png" height=40 px width=80 px"><label style="color:white">Judaism</label></img>'),\
                              HTML('<img id="img26" src="Hinduism.png" height=40 px width=80 px"><label style="color:white">Hinduism</label></img>'),\
                              HTML('<img id="img26" src="Eastern_orthodox.png" height=40 px width=80 px"><label style="color:white">Eastern orthodox</label></img>'),\
                              HTML('<img id="img26" src="Lutheran.png" height=40 px width=80 px"><label style="color:white">Lutheran</label></img>')\
\
                              ),\
                            \
                            \
                            choiceValues = list(\
                              "allReligion","Catholic", "Buddism", "Islam","Judaism", "Hinduism", "Eastern Orthodox","Lutheran"\
                            ),selected="allReligion"\
               )\
               \
                 \
                \
\
),\
\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 #h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                # h4("1: Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                # h4("2: To search for other culture and religion just type in the search box below the the map",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 \
                # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
               #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
               #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
               #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
               #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
     \
      column(4,\
             selectInput("Postcode",\
                         HTML("<h3 style='color:white;'>Postcode</h3>"),\
                         c(\
                           sort(unique(as.character(centers$Postcode)))),selected =2000),\
             align='center'),align='center'),\
      \
      leafletOutput("sitemap"),\
    \
      \
      \
      DT::dataTableOutput("table"),\
      h3("Click and select a name or address from the above table to search on Google", align = "left",style = "color:white",font="Times New Roman"),\
     # uiOutput(outputId = "ggoogle"),\
      \
     # uiOutput("tab"),\
      fluidRow( \
        column(6, uiOutput("tab"),uiOutput(outputId = "ggoogle")),\
        column(6,uiOutput("tabggmap"),uiOutput(outputId = "ggmap")\
               )) \
     # uiOutput(outputId = "ggmap"),\
      #uiOutput("tabggmap")\
       #verbatimTextOutput("selectedCells")\
      #box(google_mapOutput("myGMap") )\
      \
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  output$ggmap <- renderUI(\{\
    tags$img(src = "ggmap.png")\
  \})\
  \
  output$ggoogle <- renderUI(\{\
    tags$img(src = "ggoogle.png")\
  \})\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    \
    req(input$Postcode)\
     \
    \
  \
  output$table <- DT::renderDataTable(\{\
    \
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    filteredPostcode <- as.data.frame(filteredPostcode)\
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      \
      options = list(\
        searching=FALSE,\
        \
       # columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy','pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      \
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \
    \
    observe(\{\
      \
      req(input$rbLanguage)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbLanguage == "English")\
        \{\
          filteredClickLan <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickLan <- filteredPostcode %>%\
            filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
            )\
        \}\
        \
        filteredClickLan <- as.data.frame(filteredClickLan)\
        datatable(\
          filteredClickLan, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
         \
          \
          options = list(\
            searching= FALSE,\
            #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
         \
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
      # google map\
      #\
    \
      \
      \
    \})\
    \
    #religion dt\
    \
    observe(\{\
      \
      req(input$rbreligion)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbreligion == "allReligion")\
        \{\
          filteredClickreli <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickreli <- filteredPostcode %>%\
            filter( grepl(input$rbreligion, Religion) \
            )\
        \}\
        \
        filteredClickreli <- as.data.frame(filteredClickreli)\
        datatable(\
          filteredClickreli, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          \
          options = list(\
            searching= FALSE,\
            #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
           \
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
  \})\
    \
    # dt cell - google map \
    \
    observe(\{\
      req(input$table_cell_clicked)\
      \
       # sstring <- "https://www.google.com/search?cr=countryAU&q="+input$table_cell_clicked\
      #https://www.google.com/search?cr=countryAU&q=St Louis Home Care\
      #https://www.google.com/maps/place/\
      output$selectedCells <- renderPrint(input$table_cell_clicked$value)\
      sstring <- paste("https://www.google.com/search?cr=countryAU&q=", as.character(input$table_cell_clicked$value))\
        \
        url <- a(as.character(input$table_cell_clicked$value), href= sstring)\
     \
        output$tab <- renderUI(\{\
          tagList( HTML("<h3 style='color:white; align ='center'>Search on Google</h3>"), url)\
        \}) # HTML("<p style='color:blue;'>English</p>"),\
        \
        sstring2 <- paste("https://www.google.com/maps/place/", as.character(input$table_cell_clicked$value))\
        url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2)\
        output$tabggmap <- renderUI(\{\
          tagList(HTML("<h3 style='color:white; align ='center'>Search on Google Map</h3>"), url2)\
        \})\
        \
        \
  \
        \
        \
       # centersfiltered <- filteredPostcode %>% filter(No == input$table_cell_clicked$value)\
      \
    \})\
  \
\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  #postcode leaflet\
  \
   observe(\{\
     \
     req(input$Postcode)\
     \
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
     # file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      #URL <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
    #  URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
      \
      filteredPostcode2 <- as.data.frame(filteredPostcode2)\
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
       # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL, ">"))%>%\
        \
       \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      \
      #lan\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbLanguage)\
       \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbLanguage == "English")\
            \{\
              filteredClickLan <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickLan <- filteredPostcode2 %>%\
                filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
                )\
            \}\
            filteredClickLan <- as.data.frame(filteredClickLan)\
             # file <- "LogoBlue3.png"\
             # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
            #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
            \
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            # img(id="img26",src = "allReligion.png", height = 40, width=80),\
            \
            leaflet(data=filteredClickLan) %>% \
              addTiles() %>%  \
              addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
             #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
             # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
              \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \})\
        \
        \
      \})\
      \
      # religion leaflet\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbreligion)\
        \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbreligion == "allReligion")\
            \{\
              filteredClickreli2 <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickreli2 <- filteredPostcode2 %>%\
                filter( grepl(input$rbreligion, Religion))\
                \
            \}\
            filteredClickreli2 <- as.data.frame( filteredClickreli2)\
            # file <- "LogoBlue3.png"\
            # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
            #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            #src = "allReligion.png", height = 40, width=80\
            #input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng\
            ### hear to show pic of place####\
            leaflet(data= filteredClickreli2) %>% addTiles() %>% \
               addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              #addTiles() %>%  addMarkers(~Longitude,~Latitude,popup =~paste0("<img src = ", URL, ">"))\
                 \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \
              #addMarkers(lng = ~Longitude, ~Latitude, popup = \
               #            ~paste0('https://www.google.com/maps/dir/', \
                #                   ~Latitude,",",~Longitude,"/",\
                 #                  ~Latitude,",", \
                  #                 ~Longitude))%>%\
              #addCircles(lng =  ~Longitude, lat = ~Latitude, popup = ~Name, label = "current location", color = "red", weight = 15)\
          \})\
             # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
            \
          \})\
        \
        \
      \})\
    \})\
    \})\
#\})\
   \
  #click marker dt\
  observe(\{\
   \
    req(input$sitemap_marker_click)\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng)\
      \
      filteredClick <- as.data.frame(filteredClick)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        \
        options = list(\
          searching= FALSE,\
          #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
       \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    #Gmap\
  #  output$myGMap <- renderGoogle_map(\{\
   #   google_map(location = c(input$sitemap_marker_click$lat, input$sitemap_marker_click$lng), key = key, search_box = T,zoom = 12, split_view = "pano", street_view_control = TRUE,update_map_view = TRUE)\
  #  \})\
   \
#https://maps.google.com/maps/contrib/105726604263661011813/photos\
   \
    \
    #religion \
  \}) \
  \
\
\
\
\}\
      \
      #language\
      \
      \
        # map$clearPopups()\
        # map$showPopup(click$latitude, click$longtitude, text)\
  \
    \
\
    \
      \
      # language\
    \
      \
  \
\
\
shinyApp(ui, server)\
\
\
\
\
\
\
#static insights\
library(shiny)\
library(datasets)\
library(magrittr) # need to run every time you start R and want to use %>%\
library(dplyr)    # alternative, this also loads %>%\
library(ggplot2)\
library(shinyWidgets)\
dementiaData = read.csv("State-Territory-Dementia.csv",header = T)\
cost = read.csv("costComparison.csv",header=T)\
\
ui <- fluidPage(setBackgroundColor("#222222"),\
  tags$head(tags$style(\
    HTML('\
         #sidebar \{\
         background-color: #222222;\
         \},\
         \
         body, label, input, button, select \{ \
         font-family: "Arial";\
         \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
    )),\
  \
  sidebarLayout(\
    sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
      \
      radioButtons("rbState",  HTML("<h3 style='color:white;'>State or region:</h3>"),\
                   choiceNames = list(\
                     HTML('<img id="img1" src="NSW.png" height=80 px width=80 px"><label style="color:white">NSW</label></img>'),\
                     HTML('<img id="img2" src="VIC.png" height=80 px width=80 px"><label style="color:white">VIC</label></img>'),\
                     HTML('<img id="img3" src="QLD.png" height=80 px width=80 px"><label style="color:white">QLD</label></img>'),\
                     HTML('<img id="img4" src="WA.png" height=80 px width=80 px"><label style="color:white">WA</label></img>'),\
                     HTML('<img id="img5" src="SA.png" height=80 px width=80 px"><label style="color:white">SA</label></img>'),\
                     HTML('<img id="img6" src="TAS.png" height=80 px width=80 px"><label style="color:white">TAS</label></img>'),\
                     HTML('<img id="img7" src="ACT.png" height=80 px width=80 px"><label style="color:white">ACT</label></img>'),\
                     HTML('<img id="img8" src="NT.png" height=80 px width=80 px"><label style="color:white">NT</label></img>'),\
                     HTML('<img id="img9" src="allAu.png" height=80 px width=80 px"><label style="color:white">All</label></img>')\
                     \
                    \
                   ),\
                   choiceValues = list(\
                     "NSW", "Vic", "Qld","WA", "SA", "Tas","ACT","NT","Show all states"\
                   ),selected="NSW"\
      ),\
      radioButtons("rbreason",  HTML("<h3 style='color:white;'>Reasons for hospital care:</h3>"),\
                   choiceNames = list(\
                     \
                     HTML("<p style='color:white;'>Admit for Renal Dialysis</p>"),\
                     HTML("<p style='color:white;'>Rehabilitation</p>"),\
                     HTML("<p style='color:white;'>Dementia and Other Chronic Disturbances of Cerebral Function</p>"),\
                     HTML("<p style='color:white;'>Respiratory Infections/Inflammations</p>"),\
                     HTML("<p style='color:white;'>Other Factors Influencing Health Status</p>"),\
                     HTML("<p style='color:white;'>Kidney and Urinary Tract Infections</p>"),\
                     HTML("<p style='color:white;'>Injuries</p>"),\
                     HTML("<p style='color:white;'>Heart Failure and Shock</p>"),\
                     HTML("<p style='color:white;'>Oesophagitis, Gastroenteritis and Misc Digestive System Disorders Age >9</p>"), \
                     HTML("<p style='color:white;'>Stroke</p>"),\
                     HTML("<p style='color:white;'>Other hip and femur procedures</p>"),\
                     HTML("<p style='color:white;'> Chronic obstructive airways disease</p>"),\
                     HTML("<p style='color:white;'>Syncope and collapse</p>"),\
                     HTML("<p style='color:white;'>Delirium</p>"),\
                     \
                     HTML("<p style='color:white;'>Septicaemia</p>"),\
                     HTML("<p style='color:white;'>Chest pain</p>"), \
                     HTML("<p style='color:white;'>Other disorders of the nervous system</p>"),\
                     HTML("<p style='color:white;'> Hip revision or replacement</p>"),\
                     HTML("<p style='color:white;'> Non-surgical spinal disorders</p>"),\
                     HTML("<p style='color:white;'>Cellulitis</p>"),\
                     HTML("<p style='color:white;'>All</p>")\
                     \
                     \
                     #img(id="img9",src = "English.png", height = 40, width=80),\
                     #img(id="img10",src = "Italian.png", height = 40, width=80),\
                     #img(id="img11",src = "Chinese.png", height = 40, width=80),\
                   ),\
                   choiceValues = list("Admit for Renal Dialysis","Rehabilitation","Dementia and Other Chronic Disturbances of Cerebral Function",\
                                       "Respiratory Infections/Inflammations","Other Factors Influencing Health Status",\
                                       "Kidney and Urinary Tract Infections",\
                                       \
                                       "Injuries","Heart Failure and Shock","Oesophagitis, Gastroenteritis and Misc Digestive System Disorders Age >9","Stroke",\
                                       "Other hip and femur procedures","Chronic obstructive airways disease","Syncope and collapse","Delirium","Septicaemia",\
                                       "Chest pain", "Other disorders of the nervous system", "Hip revision or replacement","Non-surgical spinal disorders",\
                                       "Cellulitis","Show all reasons"\
                   ),selected="Admit for Renal Dialysis"\
      )\
      ),\
    \
    mainPanel(\
     \
      br(),\
      br(),\
      br(),\
      br(),\
      HTML("<h1 style='color:white'; align='center'>Number of people with dementia in Australia</h1>"),\
      #headerPanel("Number of people with dementia in Australia"), \
      br(),\
      br(),\
     \
      br(),\
      br(),\
      br(),\
      \
      br(),\
      \
      plotOutput("coolplot"),\
      br(),\
      br(),\
      \
      br(),\
      br(),\
      HTML("<h1 style='color:white'; align='center'>Average hospital care costs comparison between people with and without dementia</h1>"),\
      br(),\
      \
      br(),\
      br(),\
      \
      br(),\
      br(),\
      \
      plotOutput("costplot")\
      \
      \
      \
      \
    )\
  )\
  \
  \
  \
  \
  \
  #headerPanel("Average costs comparison between people with and without dementia"), \
  \
  \
  \
  \
)\
\
server <- function(input, output) \{\
  output$coolplot <- renderPlot(\
    \
  \
    \
    \{\
      if(input$rbState == "Show all states")\
      \{\
        ggplot(dementiaData,aes(Year,Number,colour=State)) + \
          geom_line() + geom_text(aes(label = Number, y = Number,fontface = "bold"),check_overlap = TRUE,size=4,color="Black")\
      \}\
      else\
      \{\
    filtered <-\
      dementiaData %>%\
      filter(\
        State == input$rbState\
        \
      )\
    \
   \
    ggplot(filtered,aes(Year,Number,label=Number)) + \
      geom_point(aes(color=State)) + facet_wrap(~State) + geom_smooth(method = "lm", formula = y ~ x, size = 1) +  geom_text(aes(label = Number, y = Number,fontface = "bold"), ,check_overlap = TRUE,size=4)\
     \
    \
    \
  \}\})\
  \
  \
  \
  output$costplot <- renderPlot(\{\
    \
    if(input$rbreason == "Show all reasons")\
    \{\
      ggplot(data=cost, aes(x=Reason, y=cost, fill=status,label=cost)) +\
        geom_bar(stat="identity", position=position_dodge(), size = 1) +   geom_text(aes(label = cost, y = cost,fontface = "bold"),check_overlap = TRUE,size=4)  +\
                                                                                       coord_flip()  \
      \
    \}\
    else\
    \{\
    \
    \
    \
    filteredcost <-\
      cost %>%\
      filter(\
        Reason== input$rbreason\
        \
      )\
    \
    \
    ggplot(data=filteredcost, aes(x=Reason, y=cost, fill=status,label=cost)) +\
      geom_bar(stat="identity", position=position_dodge(), size = 1) +   geom_text(aes(label = cost, y = cost,fontface = "bold"),check_overlap = TRUE,size=5, position=position_dodge(width=0.9), vjust=-0.25)  \
    \
    \
    \
    \
    \
    \
    \
  \}\})\
  \
  \
\
\}\
\
\
shinyApp(ui = ui, server = server)\
\
\
\
\
\
\
#\
\
library(shiny)\
library(datasets)\
library(magrittr) # need to run every time you start R and want to use %>%\
library(dplyr)    # alternative, this also loads %>%\
library(ggplot2)\
library(shinyWidgets)\
dementiaData = read.csv("State-Territory-Dementia.csv",header = T)\
cost = read.csv("costComparison.csv",header=T)\
\
ui <- fluidPage(setBackgroundColor("#222222"),\
  tags$head(tags$style(\
    HTML('\
         #sidebar \{\
         background-color: #222222;\
         \},\
         \
         body, label, input, button, select \{ \
         font-family: "Arial";\
         \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
    )),\
  \
  sidebarLayout(\
    sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
      \
      radioButtons("rbState",  HTML("<h3 style='color:white;'>State or region:</h3>"),\
                   choiceNames = list(\
                     HTML('<img id="img1" src="NSW.png" height=80 px width=80 px"><label style="color:white">NSW</label></img>'),\
                     HTML('<img id="img2" src="VIC.png" height=80 px width=80 px"><label style="color:white">VIC</label></img>'),\
                     HTML('<img id="img3" src="QLD.png" height=80 px width=80 px"><label style="color:white">QLD</label></img>'),\
                     HTML('<img id="img4" src="WA.png" height=80 px width=80 px"><label style="color:white">WA</label></img>'),\
                     HTML('<img id="img5" src="SA.png" height=80 px width=80 px"><label style="color:white">SA</label></img>'),\
                     HTML('<img id="img6" src="TAS.png" height=80 px width=80 px"><label style="color:white">TAS</label></img>'),\
                     HTML('<img id="img7" src="ACT.png" height=80 px width=80 px"><label style="color:white">ACT</label></img>'),\
                     HTML('<img id="img8" src="NT.png" height=80 px width=80 px"><label style="color:white">NT</label></img>'),\
                     HTML('<img id="img9" src="allAu.png" height=80 px width=80 px"><label style="color:white">All</label></img>')\
                     \
                    \
                   ),\
                   choiceValues = list(\
                     "NSW", "Vic", "Qld","WA", "SA", "Tas","ACT","NT","Show all states"\
                   ),selected="NSW"\
      )\
      ),\
    \
    mainPanel(\
     \
      br(),\
      br(),\
      br(),\
      br(),\
      HTML("<h1 style='color:white'; align='center'>Number of people with dementia in Australia</h1>"),\
      #headerPanel("Number of people with dementia in Australia"), \
      br(),\
      br(),\
     \
      br(),\
      br(),\
      br(),\
      \
      br(),\
      \
      plotOutput("coolplot"),\
      \
      plotOutput("costplot")\
      \
      \
      \
      \
    )\
  ),\
  headerPanel("Average costs comparison between people with and without dementia"), \
  \
  \
  sidebarLayout(\
    sidebarPanel(id="sidebar",\
      radioButtons("rbreason",  HTML("<h3 style='color:white;'>Culture & Language:</h3>"),\
                   choiceNames = list(\
                     \
                     HTML("<p style='color:white;'>Admit for Renal Dialysis</p>"),\
                     HTML("<p style='color:white;'>Rehabilitation</p>"),\
                     HTML("<p style='color:white;'>Dementia and Other Chronic Disturbances of Cerebral Function</p>"),\
                     HTML("<p style='color:white;'>Respiratory Infections/Inflammations</p>"),\
                     HTML("<p style='color:white;'>Other Factors Influencing Health Status</p>"),\
                     HTML("<p style='color:white;'>Kidney and Urinary Tract Infections</p>"),\
                     HTML("<p style='color:white;'>Injuries</p>"),\
                     HTML("<p style='color:white;'>Heart Failure and Shock</p>"),\
                     HTML("<p style='color:white;'>Oesophagitis, Gastroenteritis and Misc Digestive System Disorders Age >9</p>"), \
                     HTML("<p style='color:white;'>Stroke</p>"),\
                     HTML("<p style='color:white;'>Other hip and femur procedures</p>"),\
                     HTML("<p style='color:white;'> Chronic obstructive airways disease</p>"),\
                     HTML("<p style='color:white;'>Syncope and collapse</p>"),\
                     HTML("<p style='color:white;'>Delirium</p>"),\
                     \
                     HTML("<p style='color:white;'>Septicaemia</p>"),\
                     HTML("<p style='color:white;'>Chest pain</p>"), \
                     HTML("<p style='color:white;'>Other disorders of the nervous system</p>"),\
                     HTML("<p style='color:white;'> Hip revision or replacement</p>"),\
                     HTML("<p style='color:white;'> Non-surgical spinal disorders</p>"),\
                     HTML("<p style='color:white;'>Cellulitis</p>"),\
                     HTML("<p style='color:white;'>All</p>")\
                    \
                          \
                     #img(id="img9",src = "English.png", height = 40, width=80),\
                     #img(id="img10",src = "Italian.png", height = 40, width=80),\
                     #img(id="img11",src = "Chinese.png", height = 40, width=80),\
                   ),\
                   choiceValues = list("Admit for Renal Dialysis","Rehabilitation","Dementia and Other Chronic Disturbances of Cerebral Function",\
                                       "Respiratory Infections/Inflammations","Other Factors Influencing Health Status",\
                                       "Kidney and Urinary Tract Infections",\
                                       \
                     "Injuries","Heart Failure and Shock","Oesophagitis, Gastroenteritis and Misc Digestive System Disorders Age >9","Stroke",\
                     "Other hip and femur procedures","Chronic obstructive airways disease","Syncope and collapse","Delirium","Septicaemia",\
                     "Chest pain", "Other disorders of the nervous system", "Hip revision or replacement","Non-surgical spinal disorders",\
                     "Cellulitis","Show all reasons"\
                   ),selected="Admit for Renal Dialysis"\
      )\
                 \
                    \
                    \
                    \
                    \
                  \
      )),\
    mainPanel(\
      \
      plotOutput("costplot")\
      \
      \
      \
      \
    )\
  )\
  \
  \
  \
  \
)\
\
server <- function(input, output) \{\
  output$coolplot <- renderPlot(\
    \
  \
    \
    \{\
      if(input$rbState == "Show all states")\
      \{\
        ggplot(dementiaData,aes(Year,Number,colour=State)) + \
          geom_line() + geom_text(aes(label = Number, y = Number,fontface = "bold"),check_overlap = TRUE,size=4,color="Black")\
      \}\
      else\
      \{\
    filtered <-\
      dementiaData %>%\
      filter(\
        State == input$rbState\
        \
      )\
    \
   \
    ggplot(filtered,aes(Year,Number,label=Number)) + \
      geom_point(aes(color=State)) + facet_wrap(~State) + geom_smooth(method = "lm", formula = y ~ x, size = 1) +  geom_text(aes(label = Number, y = Number,fontface = "bold"), ,check_overlap = TRUE,size=4)\
     \
    \
    \
  \}\})\
  \
  \
  \
  output$costplot <- renderPlot(\{\
    \
    if(input$rbreason == "Show all reasons")\
    \{\
      ggplot(data=cost, aes(x=Reason, y=cost, fill=status,label=cost)) +\
        geom_bar(stat="identity", position=position_dodge(), size = 1) +   geom_text(aes(label = cost, y = cost,fontface = "bold"),check_overlap = TRUE,size=4)  +\
                                                                                       coord_flip()  \
      \
    \}\
    else\
    \{\
    \
    \
    \
    filteredcost <-\
      cost %>%\
      filter(\
        Reason== input$rbreason\
        \
      )\
    \
    \
    ggplot(data=filteredcost, aes(x=Reason, y=cost, fill=status,label=cost)) +\
      geom_bar(stat="identity", position=position_dodge(), size = 1) +   geom_text(aes(label = cost, y = cost,fontface = "bold"),check_overlap = TRUE,size=5, position=position_dodge(width=0.9), vjust=-0.25)  \
    \
    \
    \
    \
    \
    \
    \
  \}\})\
  \
  \
\
\}\
\
\
shinyApp(ui = ui, server = server)\
\
\
\
\
\
\
\
\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
library(shinyWidgets)\
\
\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(\
  \
  tags$head(tags$style(\
    HTML('\
         #sidebar \{\
         background-color: #222222;\
         \}\
         \
         body, label, input, button, select \{ \
         font-family: "Arial";\
         \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
    )),\
                                           \
  \
  sidebarLayout(\
    \
    #tags$head(tags$style(HTML('background-color: #222222'))),\
    \
    sidebarPanel(id="sidebar",setBackgroundColor("#222222"),\
                 \
               radioButtons("rbLanguage",  HTML("<h3 style='color:white;'>Culture & Language:</h3>"),\
                            choiceNames = list(\
                              \
                              HTML("<p style='color:white;'>English</p>"),\
                              HTML("<p style='color:white;'>
\f6 \'d6\'d0\'ce\'c4
\f5 </p>"),\
                              HTML("<p style='color:white;'>Italiano</p>"),\
                              HTML("<p style='color:white;'>
\f7 \uc0\u2361 \u2367 \u2306 \u2342 \u2368 
\f5 </p>"),\
                              HTML("<p style='color:white;'>\uc0\u1056 \u1091 \u1089 \u1089 \u1082 \u1080 \u1081 </p>"),\
                              HTML("<p style='color:white;'>Deutsche</p>"),\
                              HTML("<p style='color:white;'>\uc0\u917 \u955 \u955 \u951 \u957 \u953 \u954 \u940 </p>"),\
                              HTML("<p style='color:white;'> Ti\uc0\u7871 ng Vi\u7879 t</p>"),\
                              HTML("<p style='color:white;'>
\f6 \'c8\'d5\'b1\'be\'d5\'5a
\f5 </p>"), \
                              HTML("<p style='color:white;'>
\f8 \'c7\'d1\'b1\'b9\'be\'ee
\f5 </p>"),\
                              HTML("<p style='color:white;'>Espa\'f1ol</p>"),\
                              HTML("<p style='color:white;'> fran\'e7ais</p>"),\
                              HTML("<p style='color:white;'> 
\f4 \'da\'d1\'c8\'ec
\f5 </p>"),\
                              HTML("<p style='color:white;'>All</p>")\
                              #img(id="img9",src = "English.png", height = 40, width=80),\
                              #img(id="img10",src = "Italian.png", height = 40, width=80),\
                              #img(id="img11",src = "Chinese.png", height = 40, width=80),\
                            ),\
                            choiceValues = list(\
                              "English", "Chinese", "Italian","Hindi", "Russian", "German","Greek","Vietnamese","Japanese","Korean","Spanish","French","Arabic","English"\
                            ),selected="English"\
               ),\
               radioButtons("rbreligion",  HTML("<h3 style='color:white;'>Religion:</h3>"),\
                            choiceNames = list(\
                              HTML('<img id="img26" src="allReligion.png" height=40 px width=80 px"><label style="color:white">All</label></img>'),\
                              HTML('<img id="img26" src="Catholic.png" height=40 px width=80 px"><label style="color:white">Catholic</label></img>'),\
                              HTML('<img id="img26" src="Buddism.png" height=40 px width=80 px"><label style="color:white">Buddism</label></img>'),\
                              HTML('<img id="img26" src="Islam.png" height=40 px width=80 px"><label style="color:white">Islam</label></img>'),\
                              HTML('<img id="img26" src="Judaism.png" height=40 px width=80 px"><label style="color:white">Judaism</label></img>'),\
                              HTML('<img id="img26" src="Hinduism.png" height=40 px width=80 px"><label style="color:white">Hinduism</label></img>'),\
                              HTML('<img id="img26" src="Eastern_orthodox.png" height=40 px width=80 px"><label style="color:white">Eastern orthodox</label></img>'),\
                              HTML('<img id="img26" src="Lutheran.png" height=40 px width=80 px"><label style="color:white">Lutheran</label></img>')\
\
                              ),\
                            \
                            \
                            choiceValues = list(\
                              "allReligion","Catholic", "Buddism", "Islam","Judaism", "Hinduism", "Eastern Orthodox","Lutheran"\
                            ),selected="allReligion"\
               )\
               \
                 \
                \
\
),\
\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 #h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                # h4("1: Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                # h4("2: To search for other culture and religion just type in the search box below the the map",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 \
                # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
               #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
               #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
               #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
               #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
     \
      column(4,\
             selectInput("Postcode",\
                         HTML("<h3 style='color:white;'>Postcode</h3>"),\
                         c(\
                           sort(unique(as.character(centers$Postcode)))),selected =2000),\
             align='center'),align='center'),\
      \
      leafletOutput("sitemap"),\
    \
      \
      \
      DT::dataTableOutput("table"),\
      h3("Click and select a name or address from the above table to search on Google", align = "left",style = "color:white",font="Times New Roman"),\
     # uiOutput(outputId = "ggoogle"),\
      \
     # uiOutput("tab"),\
      fluidRow( \
        column(6, uiOutput("tab"),uiOutput(outputId = "ggoogle")),\
        column(6,uiOutput("tabggmap"),uiOutput(outputId = "ggmap")\
               )) \
     # uiOutput(outputId = "ggmap"),\
      #uiOutput("tabggmap")\
       #verbatimTextOutput("selectedCells")\
      #box(google_mapOutput("myGMap") )\
      \
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  output$ggmap <- renderUI(\{\
    tags$img(src = "ggmap.png")\
  \})\
  \
  output$ggoogle <- renderUI(\{\
    tags$img(src = "ggoogle.png")\
  \})\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    \
    req(input$Postcode)\
     \
    \
  \
  output$table <- DT::renderDataTable(\{\
    \
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    filteredPostcode <- as.data.frame(filteredPostcode)\
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      \
      options = list(\
        searching=FALSE,\
        \
       # columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy','pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      \
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \
    \
    observe(\{\
      \
      req(input$rbLanguage)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbLanguage == "English")\
        \{\
          filteredClickLan <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickLan <- filteredPostcode %>%\
            filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
            )\
        \}\
        \
        filteredClickLan <- as.data.frame(filteredClickLan)\
        datatable(\
          filteredClickLan, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
         \
          \
          options = list(\
            searching= FALSE,\
            #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
         \
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
      # google map\
      #\
    \
      \
      \
    \})\
    \
    #religion dt\
    \
    observe(\{\
      \
      req(input$rbreligion)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbreligion == "allReligion")\
        \{\
          filteredClickreli <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickreli <- filteredPostcode %>%\
            filter( grepl(input$rbreligion, Religion) \
            )\
        \}\
        \
        filteredClickreli <- as.data.frame(filteredClickreli)\
        datatable(\
          filteredClickreli, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          \
          options = list(\
            searching= FALSE,\
            #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
           \
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
  \})\
    \
    # dt cell - google map \
    \
    observe(\{\
      req(input$table_cell_clicked)\
      \
       # sstring <- "https://www.google.com/search?cr=countryAU&q="+input$table_cell_clicked\
      #https://www.google.com/search?cr=countryAU&q=St Louis Home Care\
      #https://www.google.com/maps/place/\
      output$selectedCells <- renderPrint(input$table_cell_clicked$value)\
      sstring <- paste("https://www.google.com/search?cr=countryAU&q=", as.character(input$table_cell_clicked$value))\
        \
        url <- a(as.character(input$table_cell_clicked$value), href= sstring)\
     \
        output$tab <- renderUI(\{\
          tagList( HTML("<h3 style='color:white; align ='center'>Search on Google</h3>"), url)\
        \}) # HTML("<p style='color:blue;'>English</p>"),\
        \
        sstring2 <- paste("https://www.google.com/maps/place/", as.character(input$table_cell_clicked$value))\
        url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2)\
        output$tabggmap <- renderUI(\{\
          tagList(HTML("<h3 style='color:white; align ='center'>Search on Google Map</h3>"), url2)\
        \})\
        \
        \
  \
        \
        \
       # centersfiltered <- filteredPostcode %>% filter(No == input$table_cell_clicked$value)\
      \
    \})\
  \
\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  #postcode leaflet\
  \
   observe(\{\
     \
     req(input$Postcode)\
     \
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
     # file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      #URL <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
    #  URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
      \
      filteredPostcode2 <- as.data.frame(filteredPostcode2)\
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
       # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL, ">"))%>%\
        \
       \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      \
      #lan\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbLanguage)\
       \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbLanguage == "English")\
            \{\
              filteredClickLan <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickLan <- filteredPostcode2 %>%\
                filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
                )\
            \}\
            filteredClickLan <- as.data.frame(filteredClickLan)\
             # file <- "LogoBlue3.png"\
             # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
            #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
            \
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            # img(id="img26",src = "allReligion.png", height = 40, width=80),\
            \
            leaflet(data=filteredClickLan) %>% \
              addTiles() %>%  \
              addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
             #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
             # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
              \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \})\
        \
        \
      \})\
      \
      # religion leaflet\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbreligion)\
        \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbreligion == "allReligion")\
            \{\
              filteredClickreli2 <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickreli2 <- filteredPostcode2 %>%\
                filter( grepl(input$rbreligion, Religion))\
                \
            \}\
            filteredClickreli2 <- as.data.frame( filteredClickreli2)\
            # file <- "LogoBlue3.png"\
            # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
            #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            #src = "allReligion.png", height = 40, width=80\
            #input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng\
            ### hear to show pic of place####\
            leaflet(data= filteredClickreli2) %>% addTiles() %>% \
               addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              #addTiles() %>%  addMarkers(~Longitude,~Latitude,popup =~paste0("<img src = ", URL, ">"))\
                 \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \
              #addMarkers(lng = ~Longitude, ~Latitude, popup = \
               #            ~paste0('https://www.google.com/maps/dir/', \
                #                   ~Latitude,",",~Longitude,"/",\
                 #                  ~Latitude,",", \
                  #                 ~Longitude))%>%\
              #addCircles(lng =  ~Longitude, lat = ~Latitude, popup = ~Name, label = "current location", color = "red", weight = 15)\
          \})\
             # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
            \
          \})\
        \
        \
      \})\
    \})\
    \})\
#\})\
   \
  #click marker dt\
  observe(\{\
   \
    req(input$sitemap_marker_click)\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng)\
      \
      filteredClick <- as.data.frame(filteredClick)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        \
        options = list(\
          searching= FALSE,\
          #columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
       \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    #Gmap\
  #  output$myGMap <- renderGoogle_map(\{\
   #   google_map(location = c(input$sitemap_marker_click$lat, input$sitemap_marker_click$lng), key = key, search_box = T,zoom = 12, split_view = "pano", street_view_control = TRUE,update_map_view = TRUE)\
  #  \})\
   \
#https://maps.google.com/maps/contrib/105726604263661011813/photos\
   \
    \
    #religion \
  \}) \
  \
\
\
\
\}\
      \
      #language\
      \
      \
        # map$clearPopups()\
        # map$showPopup(click$latitude, click$longtitude, text)\
  \
    \
\
    \
      \
      # language\
    \
      \
  \
\
\
shinyApp(ui, server)\
\
\
\
\
\
\
# 35 added google , format no ready\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
              \
                 \
                 \
               \
               radioButtons("rbLanguage", "Culture & Language:",\
                            choiceNames = list(\
                              img(id="img9",src = "English.png", height = 40, width=80),\
                              img(id="img10",src = "Italian.png", height = 40, width=80),\
                              img(id="img11",src = "Chinese.png", height = 40, width=80),\
                              img(id="img12",src = "Indian.png", height = 40, width=80),\
                              img(id="img13",src = "Russian.png", height = 40, width=80),\
                              img(id="img14",src = "German.png", height = 40, width=80),\
                              img(id="img15",src = "Greek.png", height = 40, width=80),\
                              img(id="img16",src = "Vietnam.png", height = 40, width=80)\
                              \
                            ),\
                            \
                            \
                            choiceValues = list(\
                              "English", "Italian", "Chinese","Indian", "Russian", "German","Greek","Vietnamese"\
                            ),selected="English"\
               ),\
               radioButtons("rbreligion", "Religion:",\
                            choiceNames = list(\
                              img(id="img26",src = "allReligion.png", height = 40, width=80),\
                              img(id="img17",src = "Catholic.png", height = 40, width=80),\
                              img(id="img18",src = "Buddism.png", height = 40, width=80),\
                              img(id="img19",src = "Islam.png", height = 40, width=80),\
                              img(id="img20",src = "Judaism.png", height = 40, width=80),\
                              img(id="img21",src = "Hinduism.png", height = 40, width=80),\
                              img(id="img22",src = "Eastern_orthodox.png", height = 40, width=80),\
                              #img(id="img23",src = "UnitingChurch", height = 40, width=80),\
                              #img(id="img24",src = "Anglican", height = 40, width=80),\
                              img(id="img25",src = "Lutheran.png", height = 40, width=80)\
                             \
                             \
                              \
                            ),\
                            \
                            \
                            choiceValues = list(\
                              "allReligion","Catholic", "Buddism", "Islam","Judaism", "Hinduism", "Eastern Orthodox","Lutheran"\
                            ),selected="allReligion"\
               )\
               \
                 \
                \
\
),\
          \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                # h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman")\
                # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                # h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
               #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
               #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
               #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
               #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
     \
      column(4,\
             selectInput("Postcode",\
                         "Postcode:",\
                         c(\
                           sort(unique(as.character(centers$Postcode)))),selected =2000),\
             align='center'),align='center'),\
      \
      leafletOutput("sitemap"),\
    \
      \
      \
      DT::dataTableOutput("table"),\
      h4( em("Select a name or address from the above table to search on Google"), align = "left",style = "color:navy",font="Times New Roman"),\
      uiOutput(outputId = "ggoogle"),\
      \
      uiOutput("tab"),\
      uiOutput(outputId = "ggmap"),\
      uiOutput("tabggmap")\
       #verbatimTextOutput("selectedCells")\
      #box(google_mapOutput("myGMap") )\
      \
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  output$ggmap <- renderUI(\{\
    tags$img(src = "ggmap.png")\
  \})\
  \
  output$ggoogle <- renderUI(\{\
    tags$img(src = "ggoogle.png")\
  \})\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    \
    req(input$Postcode)\
     \
    \
  \
  output$table <- DT::renderDataTable(\{\
    \
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    filteredPostcode <- as.data.frame(filteredPostcode)\
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy','pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      \
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \
    \
    observe(\{\
      \
      req(input$rbLanguage)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbLanguage == "English")\
        \{\
          filteredClickLan <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickLan <- filteredPostcode %>%\
            filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
            )\
        \}\
        \
        filteredClickLan <- as.data.frame(filteredClickLan)\
        datatable(\
          filteredClickLan, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
         \
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
      # google map\
      #\
    \
      \
      \
    \})\
    \
    #religion dt\
    \
    observe(\{\
      \
      req(input$rbreligion)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbreligion == "allReligion")\
        \{\
          filteredClickreli <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickreli <- filteredPostcode %>%\
            filter( grepl(input$rbreligion, Religion) \
            )\
        \}\
        \
        filteredClickreli <- as.data.frame(filteredClickreli)\
        datatable(\
          filteredClickreli, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
           \
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
  \})\
    \
    # dt cell - google map \
    \
    observe(\{\
      req(input$table_cell_clicked)\
      \
       # sstring <- "https://www.google.com/search?cr=countryAU&q="+input$table_cell_clicked\
      #https://www.google.com/search?cr=countryAU&q=St Louis Home Care\
      #https://www.google.com/maps/place/\
      output$selectedCells <- renderPrint(input$table_cell_clicked$value)\
      sstring <- paste("https://www.google.com/search?cr=countryAU&q=", as.character(input$table_cell_clicked$value))\
        \
        url <- a(as.character(input$table_cell_clicked$value), href= sstring)\
        output$tab <- renderUI(\{\
          tagList( "Search", url)\
        \})\
        \
        sstring2 <- paste("https://www.google.com/maps/place/", as.character(input$table_cell_clicked$value))\
        url2 <- a(as.character(input$table_cell_clicked$value), href= sstring2)\
        output$tabggmap <- renderUI(\{\
          tagList( "Search", url2)\
        \})\
        \
        \
  \
        \
        \
       # centersfiltered <- filteredPostcode %>% filter(No == input$table_cell_clicked$value)\
      \
    \})\
  \
\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  #postcode leaflet\
  \
   observe(\{\
     \
     req(input$Postcode)\
     \
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
     # file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      #URL <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
    #  URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
      \
      filteredPostcode2 <- as.data.frame(filteredPostcode2)\
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
       # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL, ">"))%>%\
        \
       \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      \
      #lan\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbLanguage)\
       \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbLanguage == "English")\
            \{\
              filteredClickLan <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickLan <- filteredPostcode2 %>%\
                filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
                )\
            \}\
            filteredClickLan <- as.data.frame(filteredClickLan)\
             # file <- "LogoBlue3.png"\
             # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
            #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
            \
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            # img(id="img26",src = "allReligion.png", height = 40, width=80),\
            \
            leaflet(data=filteredClickLan) %>% \
              addTiles() %>%  \
              addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
             #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
             # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
              \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \})\
        \
        \
      \})\
      \
      # religion leaflet\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbreligion)\
        \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbreligion == "allReligion")\
            \{\
              filteredClickreli2 <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickreli2 <- filteredPostcode2 %>%\
                filter( grepl(input$rbreligion, Religion))\
                \
            \}\
            filteredClickreli2 <- as.data.frame( filteredClickreli2)\
            # file <- "LogoBlue3.png"\
            # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
            #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            #src = "allReligion.png", height = 40, width=80\
            #input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng\
            ### hear to show pic of place####\
            leaflet(data= filteredClickreli2) %>% addTiles() %>% \
               addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              #addTiles() %>%  addMarkers(~Longitude,~Latitude,popup =~paste0("<img src = ", URL, ">"))\
                 \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \
              #addMarkers(lng = ~Longitude, ~Latitude, popup = \
               #            ~paste0('https://www.google.com/maps/dir/', \
                #                   ~Latitude,",",~Longitude,"/",\
                 #                  ~Latitude,",", \
                  #                 ~Longitude))%>%\
              #addCircles(lng =  ~Longitude, lat = ~Latitude, popup = ~Name, label = "current location", color = "red", weight = 15)\
          \})\
             # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
            \
          \})\
        \
        \
      \})\
    \})\
    \})\
#\})\
   \
  #click marker dt\
  observe(\{\
   \
    req(input$sitemap_marker_click)\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng)\
      \
      filteredClick <- as.data.frame(filteredClick)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,8,9,10,11,12), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
       \
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    #Gmap\
  #  output$myGMap <- renderGoogle_map(\{\
   #   google_map(location = c(input$sitemap_marker_click$lat, input$sitemap_marker_click$lng), key = key, search_box = T,zoom = 12, split_view = "pano", street_view_control = TRUE,update_map_view = TRUE)\
  #  \})\
   \
#https://maps.google.com/maps/contrib/105726604263661011813/photos\
   \
    \
    #religion \
  \}) \
  \
\
\
\
\}\
      \
      #language\
      \
      \
        # map$clearPopups()\
        # map$showPopup(click$latitude, click$longtitude, text)\
  \
    \
\
    \
      \
      # language\
    \
      \
  \
\
\
shinyApp(ui, server)\
\
\
\
##\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
              \
                 \
                 \
               \
               radioButtons("rbLanguage", "Culture & Language:",\
                            choiceNames = list(\
                              img(id="img9",src = "English.png", height = 40, width=80),\
                              img(id="img10",src = "Italian.png", height = 40, width=80),\
                              img(id="img11",src = "Chinese.png", height = 40, width=80),\
                              img(id="img12",src = "Indian.png", height = 40, width=80),\
                              img(id="img13",src = "Russian.png", height = 40, width=80),\
                              img(id="img14",src = "German.png", height = 40, width=80),\
                              img(id="img15",src = "Greek.png", height = 40, width=80),\
                              img(id="img16",src = "Vietnam.png", height = 40, width=80)\
                              \
                            ),\
                            \
                            \
                            choiceValues = list(\
                              "English", "Italian", "Chinese","Indian", "Russian", "German","Greek","Vietnamese"\
                            ),selected="English"\
               ),\
               radioButtons("rbreligion", "Religion:",\
                            choiceNames = list(\
                              img(id="img26",src = "allReligion.png", height = 40, width=80),\
                              img(id="img17",src = "Catholic.png", height = 40, width=80),\
                              img(id="img18",src = "Buddism.png", height = 40, width=80),\
                              img(id="img19",src = "Islam.png", height = 40, width=80),\
                              img(id="img20",src = "Judaism.png", height = 40, width=80),\
                              img(id="img21",src = "Hinduism.png", height = 40, width=80),\
                              img(id="img22",src = "Eastern_orthodox.png", height = 40, width=80),\
                              #img(id="img23",src = "UnitingChurch", height = 40, width=80),\
                              #img(id="img24",src = "Anglican", height = 40, width=80),\
                              img(id="img25",src = "Lutheran.png", height = 40, width=80)\
                             \
                             \
                              \
                            ),\
                            \
                            \
                            choiceValues = list(\
                              "allReligion","Catholic", "Buddism", "Islam","Judaism", "Hinduism", "Eastern Orthodox","Lutheran"\
                            ),selected="allReligion"\
               )\
               \
                 \
                \
\
),\
          \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                # h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman")\
                # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                # h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
               #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
               #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
               #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
               #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
     \
      column(4,\
             selectInput("Postcode",\
                         "Postcode:",\
                         c(\
                           sort(unique(as.character(centers$Postcode)))),selected =2000),\
             align='center'),align='center'),\
      \
      leafletOutput("sitemap"),\
      \
      \
      DT::dataTableOutput("table"),\
      # verbatimTextOutput("selectedCells"),\
      box(google_mapOutput("myGMap") )\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    \
    req(input$Postcode)\
     \
    \
  \
  output$table <- DT::renderDataTable(\{\
    \
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    filteredPostcode <- as.data.frame(filteredPostcode)\
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \
    \
    observe(\{\
      \
      req(input$rbLanguage)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbLanguage == "English")\
        \{\
          filteredClickLan <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickLan <- filteredPostcode %>%\
            filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
            )\
        \}\
        \
        filteredClickLan <- as.data.frame(filteredClickLan)\
        datatable(\
          filteredClickLan, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
      \
    \})\
    \
    #religion dt\
    \
    observe(\{\
      \
      req(input$rbreligion)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbreligion == "allReligion")\
        \{\
          filteredClickreli <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickreli <- filteredPostcode %>%\
            filter( grepl(input$rbreligion, Religion) \
            )\
        \}\
        \
        filteredClickreli <- as.data.frame(filteredClickreli)\
        datatable(\
          filteredClickreli, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
  \})\
  \
\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  #postcode leaflet\
  \
   observe(\{\
     \
     req(input$Postcode)\
     \
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
     # file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      #URL <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
    #  URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
      \
      filteredPostcode2 <- as.data.frame(filteredPostcode2)\
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
       # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
        addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL, ">"))%>%\
        \
       \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      \
      #lan\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbLanguage)\
       \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbLanguage == "English")\
            \{\
              filteredClickLan <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickLan <- filteredPostcode2 %>%\
                filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
                )\
            \}\
            filteredClickLan <- as.data.frame(filteredClickLan)\
             # file <- "LogoBlue3.png"\
             # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
            #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
            \
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            # img(id="img26",src = "allReligion.png", height = 40, width=80),\
            \
            leaflet(data=filteredClickLan) %>% \
              addTiles() %>%  \
            #  addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
             #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
              \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \})\
        \
        \
      \})\
      \
      # religion leaflet\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbreligion)\
        \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbreligion == "allReligion")\
            \{\
              filteredClickreli2 <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickreli2 <- filteredPostcode2 %>%\
                filter( grepl(input$rbreligion, Religion))\
                \
            \}\
            filteredClickreli2 <- as.data.frame( filteredClickreli2)\
            # file <- "LogoBlue3.png"\
            # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
            #URL <- 'https://geo3.ggpht.com/cbk?panoid=roUHjoCgoaEWmTA0xFoNQA&output=thumbnail&cb_client=search.TACTILE.gps&thumb=2&w=408&h=240&yaw=278.6541&pitch=0&thumbfov=100'\
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            #src = "allReligion.png", height = 40, width=80\
            #input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng\
            ### hear to show pic of place####\
            leaflet(data= filteredClickreli2) %>% \
              addTiles() %>%  addMarkers(~Longitude,~Latitude,popup =~paste0("<img src = ", URL, ">"))%>%     #~paste0(img(src =URL))\
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \
              #addMarkers(lng = ~Longitude, ~Latitude, popup = \
               #            ~paste0('https://www.google.com/maps/dir/', \
                #                   ~Latitude,",",~Longitude,"/",\
                 #                  ~Latitude,",", \
                  #                 ~Longitude))%>%\
              #addCircles(lng =  ~Longitude, lat = ~Latitude, popup = ~Name, label = "current location", color = "red", weight = 15)\
          \})\
             # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", ~URL ,">"))%>%\
            \
          \})\
        \
        \
      \})\
    \})\
    \})\
#\})\
   \
  #click marker dt\
  observe(\{\
   \
    req(input$sitemap_marker_click)\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng)\
      \
      filteredClick <- as.data.frame(filteredClick)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    #Gmap\
    output$myGMap <- renderGoogle_map(\{\
      google_map(location = c(input$sitemap_marker_click$lat, input$sitemap_marker_click$lng), key = key, search_box = T,zoom = 12, split_view = "pano", street_view_control = TRUE,update_map_view = TRUE)\
    \})\
    \
  \
    \
    #religion \
  \}) \
  \
\
\
\
\}\
      \
      #language\
      \
      \
        # map$clearPopups()\
        # map$showPopup(click$latitude, click$longtitude, text)\
  \
    \
\
    \
      \
      # language\
    \
      \
  \
\
\
shinyApp(ui, server)\
\
\
\
\
\
\
\
32: lan, x religion \
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
              \
                 \
                 \
               \
               radioButtons("rbLanguage", "Culture & Language:",\
                            choiceNames = list(\
                              img(id="img9",src = "English.png", height = 40, width=80),\
                              img(id="img10",src = "Italian.png", height = 40, width=80),\
                              img(id="img11",src = "Chinese.png", height = 40, width=80),\
                              img(id="img12",src = "Indian.png", height = 40, width=80),\
                              img(id="img13",src = "Russian.png", height = 40, width=80),\
                              img(id="img14",src = "German.png", height = 40, width=80),\
                              img(id="img15",src = "Greek.png", height = 40, width=80),\
                              img(id="img16",src = "Vietnam.png", height = 40, width=80)\
                              \
                            ),\
                            \
                            \
                            choiceValues = list(\
                              "English", "Italian", "Chinese","Indian", "Russian", "German","Greek","Vietnamese"\
                            ),selected="English"\
               ),\
               radioButtons("rbreligion", "Religion:",\
                            choiceNames = list(\
                              img(id="img26",src = "allReligion.png", height = 40, width=80),\
                              img(id="img17",src = "Catholic.png", height = 40, width=80),\
                              img(id="img18",src = "Buddism.png", height = 40, width=80),\
                              img(id="img19",src = "Islam.png", height = 40, width=80),\
                              img(id="img20",src = "Judaism.png", height = 40, width=80),\
                              img(id="img21",src = "Hinduism.png", height = 40, width=80),\
                              img(id="img22",src = "Eastern_orthodox.png", height = 40, width=80),\
                              #img(id="img23",src = "UnitingChurch", height = 40, width=80),\
                              #img(id="img24",src = "Anglican", height = 40, width=80),\
                              img(id="img25",src = "Lutheran.png", height = 40, width=80)\
                             \
                             \
                              \
                            ),\
                            \
                            \
                            choiceValues = list(\
                              "allReligion","Catholic", "Buddism", "Islam","Judaism", "Hinduism", "Eastern Orthodox","Lutheran"\
                            ),selected="English"\
               )\
               \
                 \
                \
\
),\
          \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                # h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman")\
                # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                # h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
               #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
               #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
               #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
               #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
     \
      column(4,\
             selectInput("Postcode",\
                         "Postcode:",\
                         c(\
                           sort(unique(as.character(centers$Postcode)))),selected =2000),\
             align='center'),align='center'),\
      \
      leafletOutput("sitemap"),\
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    \
    req(input$Postcode)\
     \
    \
  \
  output$table <- DT::renderDataTable(\{\
    \
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    filteredPostcode <- as.data.frame(filteredPostcode)\
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \
    \
    observe(\{\
      \
      req(input$rbLanguage)\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        if ( input$rbLanguage == "English")\
        \{\
          filteredClickLan <- filteredPostcode\
        \}\
        else\
        \{\
          \
          filteredClickLan <- filteredPostcode %>%\
            filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
            )\
        \}\
        \
        filteredClickLan <- as.data.frame(filteredClickLan)\
        datatable(\
          filteredClickLan, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
      \
    \})\
  \})\
  \
\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  #postcode leaflet\
  \
   observe(\{\
     \
     req(input$Postcode)\
     \
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
     # file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
     # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
      \
      filteredPostcode2 <- as.data.frame(filteredPostcode2)\
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
        \
       \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      \
      #lan\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        req(input$rbLanguage)\
       \
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            if ( input$rbLanguage == "English")\
            \{\
              filteredClickLan <- filteredPostcode2\
            \}\
            else\
            \{\
              \
              filteredClickLan <- filteredPostcode2 %>%\
                filter( grepl(input$rbLanguage, Language) || grepl(input$rbLanguage, Culture)\
                )\
            \}\
            filteredClickLan <- as.data.frame(filteredClickLan)\
             # file <- "LogoBlue3.png"\
             # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
              \
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            \
            leaflet(data=filteredClickLan) %>% \
              addTiles() %>%  \
              addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
             #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \})\
        \
        \
      \})\
    \})\
   \})\
   \
  #click marker\
  observe(\{\
   \
    req(input$sitemap_marker_click)\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == input$sitemap_marker_click$lat & Longitude == input$sitemap_marker_click$lng)\
      \
      filteredClick <- as.data.frame(filteredClick)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    #religion \
    \
  \})\
\
    \
\
      \
      #language\
      \
        \
        # map$clearPopups()\
        # map$showPopup(click$latitude, click$longtitude, text)\
  \
\}    \
\
    \
      \
      # language\
    \
      \
  \
\
\
shinyApp(ui, server)\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers <- as.data.frame(centers)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
              \
                 \
                 \
               \
               radioButtons("rbLanguage", "Culture & Language:",\
                            choiceNames = list(\
                              img(id="img9",src = "Italian.png", height = 40, width=80),\
                              img(id="img10",src = "Chinese.png", height = 40, width=80),\
                              img(id="img11",src = "Indian.png", height = 40, width=80),\
                              img(id="img12",src = "Vietnam.png", height = 40, width=80),\
                              img(id="img13",src = "Russian.png", height = 40, width=80),\
                              img(id="img14",src = "German.png", height = 40, width=80),\
                              img(id="img15",src = "Greek.png", height = 40, width=80),\
                              img(id="img16",src = "English.png", height = 40, width=80)\
                              \
                            ),\
                            \
                            \
                            choiceValues = list(\
                              "Italian", "Chinese", "Indian","Vietnamese", "Russian", "German","Greek","English"\
                            ),inline = TRUE, selected = "Italian"\
               ),\
               \
                 \
                  \
                 radioButtons("rb", "Show all home care package providers in your state or territory:",\
                              choiceNames = list(\
                                img(id="img1",src = "VIC.png", height = 80, width=80),\
                                img(id="img2",src = "NSW.png", height = 80, width=80),\
                                img(id="img3",src = "SA.png", height = 80, width=80),\
                                img(id="img4",src = "TAS.png", height = 80, width=80),\
                                img(id="img5",src = "QLD.png", height = 80, width=80),\
                                img(id="img6",src = "WA.png", height = 80, width=80),\
                                img(id="img7",src = "NT.png", height = 80, width=80),\
                                img(id="img8",src = "ACT.png", height = 80, width=80)\
                                \
                                ),\
                                \
                                \
                              choiceValues = list(\
                                'VIC','NSW','SA','TAS','QLD','WA','NT','ACT'\
                              ),inline = TRUE, selected = character(0)\
)\
\
),\
          \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                # h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman")\
                # h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                # h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                # h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
               #  h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                # h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
               #  h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
               #  h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
               #  h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
     \
      column(4,\
             selectInput("Postcode",\
                         "Postcode:",\
                         c(\
                           sort(unique(as.character(centers$Postcode)))),selected =2000),\
             align='left'),align='left'),\
      \
      leafletOutput("sitemap"),\
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  #postcode click, datatable\
  observe(\{\
    click <- input$Postcode\
    if (is.null(click))\
      return()\
    \
  \
  output$table <- DT::renderDataTable(\{\
    \
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \
    \
    observe(\{\
      click5 <- input$rbLanguage\
      if (is.null(click5))\
        return()\
      \
      \
      output$table <- DT::renderDataTable(\{\
        \
        filteredClickLan <-filteredPostcode %>%\
          filter( grepl(input$rbLanguage, Language)\
          )\
        \
        datatable(\
          filteredClickLan, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
      \
    \})\
  \})\
  \
\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  #postcode leaflet\
  \
   observe(\{\
  click6 <- input$Postcode\
  if (is.null(click6))\
    return()\
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
     # file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
     # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
      \
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        #addMarkers(~Longitude,~Latitude,popup = paste0("<img src = " ">"))%>%\
        \
       \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      \
      #lan\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        click7 <- input$rbLanguage\
        if (is.null(click7))\
          return()\
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            \
            filteredClickLan <- filteredPostcode2 %>%\
              filter( grepl(input$rbLanguage, Language)\
              )\
             # file <- "LogoBlue3.png"\
             # file <- 'https://geo2.ggpht.com/maps/photothumb/fd/v1?bpb=ChAKDnNlYXJjaC5UQUNUSUxFEloKTAlnqWnCPq4SaxFWAZtg-PjYbRo4CxDThbhCGi8aLQoWChQKEglnqWnCPq4SaxEnZndM2yWJJRITU3VpdGUgMTkwNCBMZXZlbCAxOQwqCg0AAAAAFQAAAAAaBgjwARCYAw&gl=AU'\
              \
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            \
            leaflet(data=filteredClickLan) %>% \
              addTiles() %>%  \
              addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
             #  addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \})\
        \
        \
      \})\
    \})\
   \})\
   \
  #click marker\
  observe(\{\
    click8 <- input$sitemap_marker_click\
    if (is.null(click8))\
      return()\
    \
    \
    output$table <- DT::renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == click8$lat & Longitude == click8$lng)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
  \})\
    \
    \
    ##radio button state\
    \
    \
    observe(\{\
     # click <- input$rb,input$Postcode,\
       click9 <- input$rb\
      if (is.null(click9))\
        return()\
      \
      #print(click)\
      \
      output$sitemap = renderLeaflet(\
        \{\
          \
          \
              filteredClicksta <- centers %>%\
                filter(\
                  State == input$rb)\
              #  file <- "LogoBlue3.png"\
              #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
              \
              leaflet(data=filteredClicksta) %>% \
                addTiles() %>%  \
                addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                \
                addEasyButton(easyButton(\
                  icon="fa-crosshairs", title="Locate Me",\
                  onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \
              \
              #lan\
              observe(\{\
                # click <- input$rb,input$Postcode,\
                click10 <- input$rbLanguage\
                if (is.null(click10))\
                  return()\
                \
                #print(click)\
                \
                output$sitemap = renderLeaflet(\
                  \{\
                    \
                    \
                    filteredClickLan <- filteredClicksta %>%\
                      filter( grepl(input$rbLanguage, Language)\
                      )\
                    #  file <- "LogoBlue3.png"\
                    #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                    \
                    leaflet(data=filteredClickLan) %>% \
                      addTiles() %>%  \
                      addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                      # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                      \
                      addEasyButton(easyButton(\
                        icon="fa-crosshairs", title="Locate Me",\
                        onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
                  \})\
                \
                \
              \})\
              \
            \}) \
    \})\
         \
    #dt\
    \
    observe(\{\
      # click <- input$rb,input$Postcode,\
      click11 <- input$rb\
      if (is.null(click11))\
        return()        \
        \
      \
      output$table <- DT::renderDataTable(\{\
        filteredClick <- centers %>%\
          filter(\
            State == input$rb)\
        \
        datatable(\
          filteredClick, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \
        observe(\{\
          \
          click12 <- input$rbLanguage\
          if (is.null(click12))\
            return()\
          \
          output$table <- DT::renderDataTable(\{\
            filteredClickLan <-filteredClick %>%\
              filter( grepl(input$rbLanguage, Language)\
              )\
            \
            datatable(\
              filteredClickLan, \
              selection='single',\
              extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
              rownames=FALSE,\
              #fixedHeader = TRUE,keys = TRUE,\
              #options = list(searchHighlight = TRUE)\
              #filter = 'top',\
              #dom = 'Bfrtip',\
              #searchHighlight = TRUE\
              \
              options = list(\
                columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
                scrollX = TRUE,\
                dom = 'Bfrtip',\
                pageLength=5,\
                buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
                scrollY = 150,\
                scroller = TRUE,\
                search = list( caseInsensitive = FALSE),\
                initComplete = JS(\
                  "function(settings, json) \{",\
                  "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                  "\}")\
              )\
            ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
          \})\
          \
        \
         \})\
      \})\
      \
      #language\
      \
        \
        # map$clearPopups()\
        # map$showPopup(click$latitude, click$longtitude, text)\
    \})  \
      \
\
    \
      \
      # language\
    \
      \}\
  \
\
\
shinyApp(ui, server)\
\
\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                  \
                 radioButtons("rb", "Show all home care package providers in your state or territory:",\
                              choiceNames = list(\
                                img(id="img1",src = "VIC.png", height = 80, width=80),\
                                img(id="img2",src = "NSW.png", height = 80, width=80),\
                                img(id="img3",src = "SA.png", height = 80, width=80),\
                                img(id="img4",src = "TAS.png", height = 80, width=80),\
                                img(id="img5",src = "QLD.png", height = 80, width=80),\
                                img(id="img6",src = "WA.png", height = 80, width=80),\
                                img(id="img7",src = "NT.png", height = 80, width=80),\
                                img(id="img8",src = "ACT.png", height = 80, width=80)\
                                \
                                ),\
                                \
                                \
                              choiceValues = list(\
                                "VIC", "NSW", "SA","TAS", "QLD", "WA","NT","ACT"\
                              ),inline = TRUE, selected = character(0)\
),\
\
radioButtons("rbLanguage", "Culture & Language:",\
             choiceNames = list(\
               img(id="img1",src = "VIC.png", height = 80, width=80),\
               img(id="img2",src = "NSW.png", height = 80, width=80),\
               img(id="img3",src = "SA.png", height = 80, width=80),\
               img(id="img4",src = "TAS.png", height = 80, width=80),\
               img(id="img5",src = "QLD.png", height = 80, width=80),\
               img(id="img6",src = "WA.png", height = 80, width=80),\
               img(id="img7",src = "NT.png", height = 80, width=80),\
               img(id="img8",src = "ACT.png", height = 80, width=80)\
               \
             ),\
             \
             \
             choiceValues = list(\
               "Italian", "Chinese", "Indian","Vietnamese", "Russian", "German","Greek","Polish"\
             ),inline = TRUE, selected = "Italian"\
),\
                 \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
                 h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
        \
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c(\
                             sort(unique(as.character(centers$Postcode)))),selected =2000),\
               align='center'),align='center'),\
     \
    \
      \
      leafletOutput("sitemap"),\
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  #postcode click\
  observe(\{\
    click <- input$Postcode\
    if (is.null(click))\
      return()\
    \
  \
  output$table <- renderDataTable(\{\
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \
    \
    observe(\{\
      click <- input$rbLanguage\
      if (is.null(click))\
        return()\
      \
      \
      output$table <- renderDataTable(\{\
        filteredClickLan <-filteredPostcode %>%\
          filter( grepl(input$rbLanguage, Language)\
          )\
        \
        datatable(\
          filteredClickLan, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
      \
    \})\
  \})\
  \
\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  \
   observe(\{\
  click <- input$Postcode\
  if (is.null(click))\
    return()\
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
    #  file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      \
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
       # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      \
      #lan\
      observe(\{\
        # click <- input$rb,input$Postcode,\
        click <- input$rbLanguage\
        if (is.null(click))\
          return()\
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            \
            filteredClickLan <- filteredPostcode2 %>%\
              filter( grepl(input$rbLanguage, Language)\
              )\
            #  file <- "LogoBlue3.png"\
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            \
            leaflet(data=filteredClickLan) %>% \
              addTiles() %>%  \
              addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \})\
        \
        \
      \})\
    \})\
   \})\
   \
  #click marker\
  observe(\{\
    click <- input$sitemap_marker_click\
    if (is.null(click))\
      return()\
    \
    print(click)\
    text <-\
      paste("Lattitude ",\
            click$lat,\
            "Longtitude ",\
            click$lng)\
    \
    leafletProxy(mapId = "map") %>%\
      clearPopups() %>%\
      addPopups(dat = click, lat = ~lat, lng = ~lng, popup = text)\
    \
    \
    output$table <- renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == click$lat & Longitude == click$lng)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
  \})\
    \
    \
    ##radio button state\
    \
    \
    observe(\{\
     # click <- input$rb,input$Postcode,\
       click <- input$rb\
      if (is.null(click))\
        return()\
      \
      #print(click)\
      \
      output$sitemap = renderLeaflet(\
        \{\
          \
          \
              filteredClick <- centers %>%\
                filter(\
                  State == input$rb)\
              #  file <- "LogoBlue3.png"\
              #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
              \
              leaflet(data=filteredClick) %>% \
                addTiles() %>%  \
                addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                \
                addEasyButton(easyButton(\
                  icon="fa-crosshairs", title="Locate Me",\
                  onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \
              \
              #lan\
              observe(\{\
                # click <- input$rb,input$Postcode,\
                click <- input$rbLanguage\
                if (is.null(click))\
                  return()\
                \
                #print(click)\
                \
                output$sitemap = renderLeaflet(\
                  \{\
                    \
                    \
                    filteredClickLan <- filteredClick %>%\
                      filter( grepl(input$rbLanguage, Language)\
                      )\
                    #  file <- "LogoBlue3.png"\
                    #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                    \
                    leaflet(data=filteredClickLan) %>% \
                      addTiles() %>%  \
                      addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                      # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                      \
                      addEasyButton(easyButton(\
                        icon="fa-crosshairs", title="Locate Me",\
                        onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
                  \})\
                \
                \
              \})\
              \
            \})\
          \
          \
        \
      \
      output$table <- renderDataTable(\{\
        filteredClick <- centers %>%\
          filter(\
            State == click)\
        \
        datatable(\
          filteredClick, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \
        observe(\{\
          \
          \
          \
          output$table <- renderDataTable(\{\
            filteredClickLan <-filteredClick %>%\
              filter( grepl(input$rbLanguage, Language)\
              )\
            \
            datatable(\
              filteredClickLan, \
              selection='single',\
              extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
              rownames=FALSE,\
              #fixedHeader = TRUE,keys = TRUE,\
              #options = list(searchHighlight = TRUE)\
              #filter = 'top',\
              #dom = 'Bfrtip',\
              #searchHighlight = TRUE\
              \
              options = list(\
                columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
                scrollX = TRUE,\
                dom = 'Bfrtip',\
                pageLength=5,\
                buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
                scrollY = 150,\
                scroller = TRUE,\
                search = list( caseInsensitive = FALSE),\
                initComplete = JS(\
                  "function(settings, json) \{",\
                  "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                  "\}")\
              )\
            ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
          \})\
          \
        \
         \})\
      \})\
      \
      #language\
      \
        \
        # map$clearPopups()\
        # map$showPopup(click$latitude, click$longtitude, text)\
    \})  \
      \
      \
    \
      \
      # language\
    \
      \}\
  \
\
\
shinyApp(ui, server)\
\
\
\
\
\
\
# 30  postcode\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                  \
                 radioButtons("rb", "Show all home care package providers in your state or territory:",\
                              choiceNames = list(\
                                img(id="img1",src = "VIC.png", height = 80, width=80),\
                                img(id="img2",src = "NSW.png", height = 80, width=80),\
                                img(id="img3",src = "SA.png", height = 80, width=80),\
                                img(id="img4",src = "TAS.png", height = 80, width=80),\
                                img(id="img5",src = "QLD.png", height = 80, width=80),\
                                img(id="img6",src = "WA.png", height = 80, width=80),\
                                img(id="img7",src = "NT.png", height = 80, width=80),\
                                img(id="img8",src = "ACT.png", height = 80, width=80)\
                                \
                                ),\
                                \
                                \
                              choiceValues = list(\
                                "VIC", "NSW", "SA","TAS", "QLD", "WA","NT","ACT"\
                              ),inline = TRUE, selected = character(0)\
),\
\
radioButtons("rbLanguage", "Culture & Language:",\
             choiceNames = list(\
               img(id="img1",src = "VIC.png", height = 80, width=80),\
               img(id="img2",src = "NSW.png", height = 80, width=80),\
               img(id="img3",src = "SA.png", height = 80, width=80),\
               img(id="img4",src = "TAS.png", height = 80, width=80),\
               img(id="img5",src = "QLD.png", height = 80, width=80),\
               img(id="img6",src = "WA.png", height = 80, width=80),\
               img(id="img7",src = "NT.png", height = 80, width=80),\
               img(id="img8",src = "ACT.png", height = 80, width=80)\
               \
             ),\
             \
             \
             choiceValues = list(\
               "Italian", "Chinese", "Indian","Vietnamese", "Russian", "German","Greek","Polish"\
             ),inline = TRUE, selected = character(0)\
),\
                 \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
                 h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
        \
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c(\
                             sort(unique(as.character(centers$Postcode)))),selected =2000),\
               align='center'),align='center'),\
     \
    \
      \
      leafletOutput("sitemap"),\
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  #postcode click\
  observe(\{\
    click <- input$Postcode\
    if (is.null(click))\
      return()\
    \
  \
  output$table <- renderDataTable(\{\
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  \
   observe(\{\
  click <- input$Postcode\
  if (is.null(click))\
    return()\
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
    #  file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      \
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
       # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
    \})\
   \})\
   \
  #click marker\
  observe(\{\
    click <- input$sitemap_marker_click\
    if (is.null(click))\
      return()\
    \
    print(click)\
    text <-\
      paste("Lattitude ",\
            click$lat,\
            "Longtitude ",\
            click$lng)\
    \
    leafletProxy(mapId = "map") %>%\
      clearPopups() %>%\
      addPopups(dat = click, lat = ~lat, lng = ~lng, popup = text)\
    \
    \
    output$table <- renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == click$lat & Longitude == click$lng)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
  \})\
    \
    \
    ##radio button\
    \
    \
    observe(\{\
     # click <- input$rb,input$Postcode,\
       click <- input$rb\
      if (is.null(click))\
        return()\
      \
      #print(click)\
      \
      output$sitemap = renderLeaflet(\
        \{\
          \
          \
              filteredClick <- centers %>%\
                filter(\
                  State == input$rb)\
              #  file <- "LogoBlue3.png"\
              #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
              \
              leaflet(data=filteredClick) %>% \
                addTiles() %>%  \
                addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                \
                addEasyButton(easyButton(\
                  icon="fa-crosshairs", title="Locate Me",\
                  onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
              \
              \
              #lan\
              observe(\{\
                # click <- input$rb,input$Postcode,\
                click <- input$rbLanguage\
                if (is.null(click))\
                  return()\
                \
                #print(click)\
                \
                output$sitemap = renderLeaflet(\
                  \{\
                    \
                    \
                    filteredClickLan <- filteredClick %>%\
                      filter( grepl(input$rbLanguage, Language)\
                      )\
                    #  file <- "LogoBlue3.png"\
                    #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
                    \
                    leaflet(data=filteredClickLan) %>% \
                      addTiles() %>%  \
                      addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                      # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                      \
                      addEasyButton(easyButton(\
                        icon="fa-crosshairs", title="Locate Me",\
                        onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
                  \})\
                \
                \
              \})\
              \
            \})\
          \
          \
        \
      \
      output$table <- renderDataTable(\{\
        filteredClick <- centers %>%\
          filter(\
            State == click)\
        \
        datatable(\
          filteredClick, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \
        observe(\{\
          \
          \
          \
          output$table <- renderDataTable(\{\
            filteredClickLan <-filteredClick %>%\
              filter( grepl(input$rbLanguage, Language)\
              )\
            \
            datatable(\
              filteredClickLan, \
              selection='single',\
              extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
              rownames=FALSE,\
              #fixedHeader = TRUE,keys = TRUE,\
              #options = list(searchHighlight = TRUE)\
              #filter = 'top',\
              #dom = 'Bfrtip',\
              #searchHighlight = TRUE\
              \
              options = list(\
                columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
                scrollX = TRUE,\
                dom = 'Bfrtip',\
                pageLength=5,\
                buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
                scrollY = 150,\
                scroller = TRUE,\
                search = list( caseInsensitive = FALSE),\
                initComplete = JS(\
                  "function(settings, json) \{",\
                  "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                  "\}")\
              )\
            ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
              formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
              formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
          \})\
          \
        \
         \})\
      \})\
      \
      #language\
      \
        \
        # map$clearPopups()\
        # map$showPopup(click$latitude, click$longtitude, text)\
    \})  \
      \
      \
    \
      \
      # language\
    \
      \}\
  \
\
\
shinyApp(ui, server)\
\
\
\
\
\
\
\
\
29: with language, need to combine\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                  \
                 radioButtons("rb", "Show all home care package providers in your state or territory:",\
                              choiceNames = list(\
                                img(id="img1",src = "VIC.png", height = 80, width=80),\
                                img(id="img2",src = "NSW.png", height = 80, width=80),\
                                img(id="img3",src = "SA.png", height = 80, width=80),\
                                img(id="img4",src = "TAS.png", height = 80, width=80),\
                                img(id="img5",src = "QLD.png", height = 80, width=80),\
                                img(id="img6",src = "WA.png", height = 80, width=80),\
                                img(id="img7",src = "NT.png", height = 80, width=80),\
                                img(id="img8",src = "ACT.png", height = 80, width=80)\
                                \
                                ),\
                                \
                                \
                              choiceValues = list(\
                                "VIC", "NSW", "SA","TAS", "QLD", "WA","NT","ACT"\
                              ),inline = TRUE, selected = character(0)\
),\
\
radioButtons("rbLanguage", "Culture & Language:",\
             choiceNames = list(\
               img(id="img1",src = "VIC.png", height = 80, width=80),\
               img(id="img2",src = "NSW.png", height = 80, width=80),\
               img(id="img3",src = "SA.png", height = 80, width=80),\
               img(id="img4",src = "TAS.png", height = 80, width=80),\
               img(id="img5",src = "QLD.png", height = 80, width=80),\
               img(id="img6",src = "WA.png", height = 80, width=80),\
               img(id="img7",src = "NT.png", height = 80, width=80),\
               img(id="img8",src = "ACT.png", height = 80, width=80)\
               \
             ),\
             \
             \
             choiceValues = list(\
               "Italian", "Chinese", "Indian","Vietnamese", "Russian", "German","Greek","Polish"\
             ),inline = TRUE, selected = character(0)\
),\
                 \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
                 h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
        \
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c(\
                             sort(unique(as.character(centers$Postcode)))),selected =2000),\
               align='center'),align='center'),\
     \
    \
      \
      leafletOutput("sitemap"),\
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  #postcode click\
  observe(\{\
    click <- input$Postcode\
    if (is.null(click))\
      return()\
    \
  \
  output$table <- renderDataTable(\{\
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  \
   observe(\{\
  click <- input$Postcode\
  if (is.null(click))\
    return()\
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
    #  file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      \
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
       # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
    \})\
   \})\
   \
  #click marker\
  observe(\{\
    click <- input$sitemap_marker_click\
    if (is.null(click))\
      return()\
    \
    print(click)\
    text <-\
      paste("Lattitude ",\
            click$lat,\
            "Longtitude ",\
            click$lng)\
    \
    leafletProxy(mapId = "map") %>%\
      clearPopups() %>%\
      addPopups(dat = click, lat = ~lat, lng = ~lng, popup = text)\
    \
    \
    output$table <- renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == click$lat & Longitude == click$lng)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
  \})\
    \
    \
    ##radio button\
    \
    \
    observe(\{\
     # click <- input$rb,input$Postcode,\
       click <- input$rb\
      if (is.null(click))\
        return()\
      \
      #print(click)\
      \
      output$sitemap = renderLeaflet(\
        \{\
          \
          \
              filteredClick <- centers %>%\
                filter(\
                  State == input$rb)\
              #  file <- "LogoBlue3.png"\
              #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
              \
              leaflet(data=filteredClick) %>% \
                addTiles() %>%  \
                addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                \
                addEasyButton(easyButton(\
                  icon="fa-crosshairs", title="Locate Me",\
                  onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
            \})\
          \
          \
        \
      \
      output$table <- renderDataTable(\{\
        filteredClick <- centers %>%\
          filter(\
            State == click)\
        \
        datatable(\
          filteredClick, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
    \})\
      \
      # language\
      \
      observe(\{\
        # click <- input$rb,input$Postcode,\
        click <- input$rbLanguage\
        if (is.null(click))\
          return()\
        \
        #print(click)\
        \
        output$sitemap = renderLeaflet(\
          \{\
            \
            \
            filteredClickLan <- centers %>%\
              filter( grepl(input$rbLanguage, Language)\
              )\
            #  file <- "LogoBlue3.png"\
            #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
            \
            leaflet(data=filteredClickLan) %>% \
              addTiles() %>%  \
              addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
              # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
              \
              addEasyButton(easyButton(\
                icon="fa-crosshairs", title="Locate Me",\
                onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
          \})\
        \
        \
        \
        \
        output$table <- renderDataTable(\{\
          filteredClickLan <- centers %>%\
            filter( grepl(input$rbLanguage, Language)\
              )\
          \
          datatable(\
            filteredClickLan, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
            rownames=FALSE,\
            #fixedHeader = TRUE,keys = TRUE,\
            #options = list(searchHighlight = TRUE)\
            #filter = 'top',\
            #dom = 'Bfrtip',\
            #searchHighlight = TRUE\
            \
            options = list(\
              columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
              scrollX = TRUE,\
              dom = 'Bfrtip',\
              pageLength=5,\
              buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
              scrollY = 150,\
              scroller = TRUE,\
              search = list( caseInsensitive = FALSE),\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
          ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
            formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
            formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
        \})\
        \
      \
    # map$clearPopups()\
    # map$showPopup(click$latitude, click$longtitude, text)\
\
    \})\
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
\
\
\
28: States\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                  \
                 radioButtons("rb", "Show all home care package providers in your state or territory:",\
                              choiceNames = list(\
                                img(id="img1",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img2",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img3",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img4",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img5",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img6",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img7",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img8",src = "LogoBlue3.png", height = 100, width=100)\
                                ),\
                                \
                                \
                              choiceValues = list(\
                                "VIC", "NSW", "SA","TAS", "QLD", "WA","NT","ACT"\
                              ),inline = TRUE),\
                 \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
                 h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
        \
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c(\
                             sort(unique(as.character(centers$Postcode)))),selected =2000),\
               align='center'),align='center'),\
     \
    \
      \
      leafletOutput("sitemap"),\
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  #postcode click\
  observe(\{\
    click <- input$Postcode\
    if (is.null(click))\
      return()\
    \
  \
  output$table <- renderDataTable(\{\
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
  \})\
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  \
   observe(\{\
  click <- input$Postcode\
  if (is.null(click))\
    return()\
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
     \
    #  file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      \
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
       # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
    \})\
   \})\
  #click marker\
  observe(\{\
    click <- input$sitemap_marker_click\
    if (is.null(click))\
      return()\
    \
    print(click)\
    text <-\
      paste("Lattitude ",\
            click$lat,\
            "Longtitude ",\
            click$lng)\
    \
    leafletProxy(mapId = "map") %>%\
      clearPopups() %>%\
      addPopups(dat = click, lat = ~lat, lng = ~lng, popup = text)\
    \
    \
    output$table <- renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == click$lat & Longitude == click$lng)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
  \})\
    \
    \
    ##radio button\
    \
    \
    observe(\{\
      click <- input$rb\
      if (is.null(click))\
        return()\
      \
      #print(click)\
      \
      output$sitemap = renderLeaflet(\
        \{\
          \
          \
              filteredClick <- centers %>%\
                filter(\
                  State == input$rb)\
              #  file <- "LogoBlue3.png"\
              #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
              \
              leaflet(data=filteredClick) %>% \
                addTiles() %>%  \
                addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
                \
                addEasyButton(easyButton(\
                  icon="fa-crosshairs", title="Locate Me",\
                  onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
            \})\
          \
          \
        \
      \
      output$table <- renderDataTable(\{\
        filteredClick <- centers %>%\
          filter(\
            State == click)\
        \
        datatable(\
          filteredClick, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
    # map$clearPopups()\
    # map$showPopup(click$latitude, click$longtitude, text)\
\
    \})\
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
\
\
27 :Radio button, map X\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
               #  img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                  \
                 radioButtons("rb", "Show all home care package providers in your state or territory:",\
                              choiceNames = list(\
                                img(id="img1",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img2",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img3",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img4",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img5",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img6",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img7",src = "LogoBlue3.png", height = 100, width=100),\
                                img(id="img8",src = "LogoBlue3.png", height = 100, width=100)\
                                ),\
                                \
                                \
                              choiceValues = list(\
                                "VIC", "NSW", "SA","TAS", "QLD", "WA","NT","ACT"\
                              ),inline = TRUE),\
                 \
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 h4("Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
                 h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      fluidRow(\
        \
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c(\
                             sort(unique(as.character(centers$Postcode)))),selected =2000),\
               align='center'),align='center'),\
     \
    \
      \
      leafletOutput("sitemap"),\
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  \
  \
  output$table <- renderDataTable(\{\
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
  \
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  \
  #\
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
    #  file <- "LogoBlue3.png"\
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      \
      leaflet(data=filteredPostcode2) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
       # addMarkers(~Longitude,~Latitude,popup = paste0("<img src = ", file, ">"))%>%\
        \
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
    \})\
  \
  #click marker\
  observe(\{\
    click <- input$sitemap_marker_click\
    if (is.null(click))\
      return()\
    \
    print(click)\
    text <-\
      paste("Lattitude ",\
            click$lat,\
            "Longtitude ",\
            click$lng)\
    \
    leafletProxy(mapId = "map") %>%\
      clearPopups() %>%\
      addPopups(dat = click, lat = ~lat, lng = ~lng, popup = text)\
    \
    \
    output$table <- renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == click$lat & Longitude == click$lng)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 150,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
  \})\
    \
    \
    ##radio button\
    \
    \
    observe(\{\
      click <- input$rb\
      if (is.null(click))\
        return()\
      \
      print(click)\
      \
      output$table <- renderDataTable(\{\
        filteredClick <- centers %>%\
          filter(\
            State == click)\
        \
        datatable(\
          filteredClick, \
          selection='single',\
          extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
          rownames=FALSE,\
          #fixedHeader = TRUE,keys = TRUE,\
          #options = list(searchHighlight = TRUE)\
          #filter = 'top',\
          #dom = 'Bfrtip',\
          #searchHighlight = TRUE\
          \
          options = list(\
            columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
            scrollX = TRUE,\
            dom = 'Bfrtip',\
            pageLength=5,\
            buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
            scrollY = 150,\
            scroller = TRUE,\
            search = list( caseInsensitive = FALSE),\
            initComplete = JS(\
              "function(settings, json) \{",\
              "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
              "\}")\
          )\
        ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
          formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
          formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
      \})\
      \
    # map$clearPopups()\
    # map$showPopup(click$latitude, click$longtitude, text)\
\
    \})\
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
\
\
26: Select by click, table update\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
                 img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 h4("2: Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
                 h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      fluidRow(\
        \
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c(\
                             sort(unique(as.character(centers$Postcode)))),selected =2000)\
        )),\
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
    )  \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  \
  \
  output$table <- renderDataTable(\{\
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
  \
  \
  \
 # output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  \
  #\
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
      \
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      \
      leaflet(data=filteredPostcode2 ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
    \})\
  \
  observe(\{\
    click <- input$sitemap_marker_click\
    if (is.null(click))\
      return()\
    \
    print(click)\
    text <-\
      paste("Lattitude ",\
            click$lat,\
            "Longtitude ",\
            click$lng)\
    \
    leafletProxy(mapId = "map") %>%\
      clearPopups() %>%\
      addPopups(dat = click, lat = ~lat, lng = ~lng, popup = text)\
    \
    \
    output$table <- renderDataTable(\{\
      filteredClick <- centers %>%\
        filter(\
          Latitude == click$lat & Longitude == click$lng)\
      \
      datatable(\
        filteredClick, \
        selection='single',\
        extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
        rownames=FALSE,\
        #fixedHeader = TRUE,keys = TRUE,\
        #options = list(searchHighlight = TRUE)\
        #filter = 'top',\
        #dom = 'Bfrtip',\
        #searchHighlight = TRUE\
        \
        options = list(\
          columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
          scrollX = TRUE,\
          dom = 'Bfrtip',\
          pageLength=5,\
          buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
          scrollY = 200,\
          scroller = TRUE,\
          search = list( caseInsensitive = FALSE),\
          initComplete = JS(\
            "function(settings, json) \{",\
            "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
            "\}")\
        )\
      ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
        formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
        formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
    \})\
    \
    # map$clearPopups()\
    # map$showPopup(click$latitude, click$longtitude, text)\
  \})\
  \
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
\
\
\
25: by postcode ,all ,sorted\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
#readr::read_csv\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
                 img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Select or enter your postcode.",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 h4("2: Click + to see the detailed information.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("3: You can search by culture, language, religion, and services. Just type in the search box (case sensitive). Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Catholic",align = "left",style = "color:navy",font="Times New Roman"),\
      \
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish",align = "left",style = "color:navy",font="Times New Roman"),\
                \
                 \
                 h4("4: You can export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    \
    \
    \
    \
    \
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      fluidRow(\
        \
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c(\
                             sort(unique(as.character(centers$Postcode)))),selected =2000)\
        )),\
      \
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
      \
      \
    )  \
    \
    \
    \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  \
  \
  output$table <- renderDataTable(\{\
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    \
    \
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      \
      \
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,6,8,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        \
        \
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        \
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('Name', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Address', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Culture', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Religion', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
    formatStyle('ID', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
  \
  \
  \
  output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
  #\
  \
  \
  #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
  #\
  \
  \
  #\
  output$sitemap = renderLeaflet(\
    \{\
      filteredPostcode2 <- centers %>%\
        filter(\
          Postcode == input$Postcode)\
      \
      #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
      \
      leaflet(data=filteredPostcode2 ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
    \})\
  \
  \
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
\
24: Show all\
\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
#readr::read_csv\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
                 img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Click + to see the detailed information and the location on the map.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("2: Search by postcode, culture, language, religion, and services. Just type in the search box. Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h4("3: Export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    \
    \
    \
    \
    \
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      fluidRow(\
        column(4,\
               selectInput("State",\
                           "State:",\
                           c("All",\
                             unique(as.character(centers$State))))\
        ),\
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c("All",\
                             unique(as.character(centers$Postcode))))\
        )),\
      \
      \
      \
      DT::dataTableOutput("table")\
      # verbatimTextOutput("selectedCells")\
      \
      \
      \
    )  \
    \
    \
    \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
  #\
  \
  \
  output$table <- renderDataTable(\{\
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    \
    \
    \
    datatable(\
      filteredPostcode, \
      selection='single',\
      extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
      \
      \
      rownames=FALSE,\
      #fixedHeader = TRUE,keys = TRUE,\
      #options = list(searchHighlight = TRUE)\
      #filter = 'top',\
      #dom = 'Bfrtip',\
      #searchHighlight = TRUE\
      \
      options = list(\
        columnDefs = list(list(targets = c(0,1,2,9,10,11,12,13), searchable = FALSE)),\
        scrollX = TRUE,\
        dom = 'Bfrtip',\
        \
        \
        pageLength=5,\
        buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
        scrollY = 200,\
        scroller = TRUE,\
        \
        search = list( caseInsensitive = FALSE),\
        initComplete = JS(\
          "function(settings, json) \{",\
          "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
          "\}")\
      )\
    ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      \
      formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
  \
  \
  \
  output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  \
      #\
      \
      \
      #centersfiltered <- centers %>% filter(No == input$table_rows_all)\
      #\
      \
     \
      #\
      output$sitemap = renderLeaflet(\
        \{\
          filteredPostcode2 <- centers %>%\
            filter(\
              Postcode == input$Postcode)\
          \
        #centersfiltered <- filteredPostcode2  %>% filter(No == input$table_rows_selected)\
        \
        leaflet(data=filteredPostcode2 ) %>% \
                                       addTiles() %>%  \
                                       addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
                                       addEasyButton(easyButton(\
                                         icon="fa-crosshairs", title="Locate Me",\
                                         onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
                                     \})\
      \
   \
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
\
23 cell click work\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
#readr::read_csv\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
centers$Phone <-  as.character(centers$Phone)\
\
\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
                 img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Click + to see the detailed information and the location on the map.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("2: Search by postcode, culture, language, religion, and services. Just type in the search box. Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h4("3: Export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    \
    \
    \
    \
    \
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      fluidRow(\
        column(4,\
               selectInput("State",\
                           "State:",\
                           c("All",\
                             unique(as.character(centers$State))))\
        ),\
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c("All",\
                             unique(as.character(centers$Postcode))))\
        )),\
 \
      DT::dataTableOutput("table")\
      #verbatimTextOutput("selectedCells")\
      \
      \
      \
    )  \
    \
    \
    \
    \
  )\
)\
\
server <- function(input, output) \{\
 \
  \
  \
  #\
  \
  \
  output$table <- renderDataTable(\{\
    \
    filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
    \
    \
 \
    \
    \
    datatable(\
      filteredPostcode, \
              selection='single',\
              extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
              \
              \
              rownames=FALSE,\
              #fixedHeader = TRUE,keys = TRUE,\
              #options = list(searchHighlight = TRUE)\
              #filter = 'top',\
              #dom = 'Bfrtip',\
              #searchHighlight = TRUE\
      \
              options = list(\
                              columnDefs = list(list(targets = c(0,1,2,9,10,11,12,13), searchable = FALSE)),\
                             scrollX = TRUE,\
                             dom = 'Bfrtip',\
                            \
                             \
                             pageLength=5,\
                             buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
                             scrollY = 200,\
                             scroller = TRUE,\
                            \
                             search = list( caseInsensitive = FALSE),\
                             initComplete = JS(\
                               "function(settings, json) \{",\
                               "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                               "\}")\
              )\
    ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      \
      formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
   \
  \
  \
  #output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  observeEvent(input$table_cell_clicked,\{\
    if(!is.null(input$table_cell_clicked))\
    \{\
    \
      filteredPostcode <- centers %>%\
      filter(\
        Postcode == input$Postcode)\
     \
      \
      centersfiltered <- filteredPostcode %>% filter(No == input$table_cell_clicked$value)\
      #\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      #\
      output$sitemap = renderLeaflet(map)\
      \
    \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(144.96332,-37.814,zoom = 10)%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      #%>%  \
      # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
    \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
\
\
22\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
#readr::read_csv\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
                 img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Click + to see the detailed information and the location on the map.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("2: Search by postcode, culture, language, religion, and services. Just type in the search box. Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h4("3: Export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    \
    \
    \
    \
    \
    mainPanel(\
      \
      leafletOutput("sitemap"),\
 \
      DT::dataTableOutput("table")\
     # verbatimTextOutput("selectedCells")\
      \
      \
      \
    )  \
    \
    \
    \
    \
  )\
)\
\
server <- function(input, output) \{\
\
  \
  \
  #\
  \
  \
  output$table <- renderDataTable(\{\
 \
    \
    \
    datatable(\
              centers, \
              selection='single',\
              extensions = c('Responsive','Buttons','FixedHeader','Scroller','KeyTable','FixedColumns'),\
              \
              \
              rownames=FALSE,\
              #fixedHeader = TRUE,keys = TRUE,\
              #options = list(searchHighlight = TRUE)\
              #filter = 'top',\
              #dom = 'Bfrtip',\
              #searchHighlight = TRUE\
      \
              options = list(\
                              columnDefs = list(list(targets = c(0,1,2,9,10,11,12,13), searchable = FALSE)),\
                             scrollX = TRUE,\
                             dom = 'Bfrtip',\
                            \
                             \
                             pageLength=5,\
                             buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),deferRender = TRUE,\
                             scrollY = 200,\
                             scroller = TRUE,\
                            \
                             search = list( caseInsensitive = FALSE),\
                             initComplete = JS(\
                               "function(settings, json) \{",\
                               "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                               "\}")\
              )\
    ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      \
      formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('State', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")%>%\
      formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman") %>%\
      formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold',`font-size` = '18px',font="Times New Roman")\
  \})\
  \
  \
   \
  \
  \
  output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  observeEvent(input$table_rows_selected,\{\
    if(!is.null(input$table_rows_selected))\
    \{\
    \
      #\
     \
      \
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      #\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      #\
      output$sitemap = renderLeaflet(map)\
      \
    \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(144.96332,-37.814,zoom = 10)%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      #%>%  \
      # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
    \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
\
21: has duplicated data, not disable column search \
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
#readr::read_csv\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
                 img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Click + to see the detailed information and the location on the map.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("2: Search by postcode, culture, language, religion, and services. Just type in the search box. Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h4("3: Export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    \
    \
    \
    \
    \
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      fluidRow(\
        column(4,\
               selectInput("State",\
                           "State:",\
                           c("All",\
                             unique(as.character(centers$State))))\
        ),\
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c("All",\
                             unique(as.character(centers$Postcode))))\
        )),\
      DT::dataTableOutput("table"),\
      verbatimTextOutput("selectedCells")\
      \
      \
      \
    )  \
    \
    \
    \
    \
  )\
)\
\
server <- function(input, output) \{\
\
  \
  \
  #\
  \
  \
  output$table <- renderDataTable(\{\
    \
    filteredPostcode <-\
      centers %>%\
      filter(\
        Postcode == input$Postcode \
        \
      )\
    \
    \
    datatable(\
              centers, \
              selection='single',\
              extensions = c('Responsive','Buttons','FixedHeader','Scroller'),\
              \
              \
              rownames=FALSE,\
              \
              #options = list(searchHighlight = TRUE)\
              options = list(searchHighlight = TRUE,dom = 'Bfrtip',pageLength=5,\
                             buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),fixedHeader = TRUE,deferRender = TRUE,\
                             scrollY = 200,\
                             scroller = TRUE,\
                             search = list( caseInsensitive = FALSE),\
                             initComplete = JS(\
                               "function(settings, json) \{",\
                               "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                               "\}")\
              )\
    ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
      formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
      formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
      formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
      \
      formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
      formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
      formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
      formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
      formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
      formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
      formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
      formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
      formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \})\
  \
  \
   \
  \
  \
  output$selectedCells <- renderPrint(input$table_rows_selected)\
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  observeEvent(input$table_rows_selected,\{\
    if(!is.null(input$table_rows_selected))\
    \{\
     # info = input$table_cell_clicked\
      # do nothing if not clicked yet, or the clicked cell is not in the 1st column\
     # if (is.null(info$value) || info$col != 0) \
     # \{\
        \
      #\
     \
      \
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      #\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      #\
      output$sitemap = renderLeaflet(map)\
      #return()\
    \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(151.2093,-33.8688,zoom = 10)%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      #%>%  \
      # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
    \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  \
  \
\}\
\
shinyApp(ui, server)\
\
\
20:\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
#readr::read_csv\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
       #sidebar \{\
       background-color: white;\
       \}\
       \
       body, label, input, button, select \{ \
       font-family: "Arial";\
       \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
  \
  \
  sidebarLayout(\
    \
    \
    sidebarPanel(id="sidebar",\
                 \
                 img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
                 \
                 #h3( em("Home Care Centers in Australia"), align = "center")\
                 h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
                 h4("1: Click + to see the detailed information and the location on the map.",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 \
                 h4("2: Search by postcode, culture, language, religion, and services. Just type in the search box. Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Italian 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
                 h5("- Dementia Spanish 2200",align = "left",style = "color:navy",font="Times New Roman"),\
                 \
                 h4("3: Export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
    \
    \
    \
    \
    \
    \
    \
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      fluidRow(\
        column(4,\
               selectInput("Postcode",\
                           "Postcode:",\
                           c("All",\
                             unique(as.character(centers$Postcode))))\
        )),\
      DT::dataTableOutput("table")\
      \
      \
      \
    )  \
    \
    \
    \
    \
  )\
)\
\
server <- function(input, output) \{\
  \
  \
  \
 \
  \
  \
 \
  #\
 \
  \
  output$table <- renderDataTable(\{\
    filtered <-\
      centers %>%\
      filter(\
        Postcode == input$Postcode\
        \
      )\
    \
    datatable(filtered, \
              selection='single',\
              extensions = c('Responsive','Buttons','FixedHeader','Scroller'),\
              \
              \
              rownames=FALSE,\
              \
              #options = list(searchHighlight = TRUE)\
              options = list(searchHighlight = TRUE,dom = 'Bfrtip',pageLength=5,\
                             buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),fixedHeader = TRUE,deferRender = FALSE,\
                             scrollY = 200,\
                             scroller = TRUE,\
                             search = list( caseInsensitive = FALSE),\
                             initComplete = JS(\
                               "function(settings, json) \{",\
                               "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                               "\}")\
              )\
    ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
      formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
      formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
      formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
      \
      formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
      formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
      formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
      formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
      formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
      formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
      formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
      formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
      formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \})\
    \
    \
    \
     \
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
  #\
  observeEvent(input$table_rows_selected,\{\
    if(!is.null(input$table_rows_selected))\
    \{\
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      output$sitemap = renderLeaflet(map)\
    \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(151.2093,-33.8688,zoom = 10)%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      #%>%  \
      # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
    \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  \
  \
\}\
\
shinyApp(ui, server)\cf3 \ul \ulc3 \
\
\
\cf2 \ulnone \
\
\
\pard\pardeftab720\sl280\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
#library(readr)\
\
#install.packages('stringr')\
#txt.tmp <- str_replace_all(conteudo_do_tweet,"[^[:graph:]]", " ") \
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
#readr::read_csv\
centers <- read.csv('GeocodedHomeCare3.csv', encoding="UTF-8", stringsAsFactors=FALSE)\
\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
         #sidebar \{\
            background-color: white;\
        \}\
\
        body, label, input, button, select \{ \
          font-family: "Arial";\
        \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
 \
  \
  sidebarLayout(\
   \
    \
    sidebarPanel(id="sidebar",\
      \
      img(id="img",src = "LogoBlue3.png", height = 300, width=400),\
      \
      #h3( em("Home Care Centers in Australia"), align = "center")\
      h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
      h4("1: Click + to see the detailed information and the location on the map.",align = "left",style = "color:navy",font="Times New Roman"),\
      \
      \
      h4("2: Search by postcode, culture, language, religion, and services. Just type in the search box. Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- 2200",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- Italian 2200",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- Dementia Spanish 2200",align = "left",style = "color:navy",font="Times New Roman"),\
      \
      h4("3: Export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
      \
     \
      \
     \
      \
  \
\
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      DT::dataTableOutput("table")\
     \
      \
      \
    )  \
           \
          \
  \
\
)\
)\
\
server <- function(input, output) \{\
  \
#\
  datatable = datatable(centers, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller'),\
            \
        \
            rownames=FALSE,\
           \
            #options = list(searchHighlight = TRUE)\
            options = list(searchHighlight = TRUE,dom = 'Bfrtip',pageLength=5,\
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),fixedHeader = TRUE,deferRender = FALSE,\
                           scrollY = 200,\
                           scroller = TRUE,\
                           search = list( caseInsensitive = FALSE),\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
           ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
    formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
    \
    formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \
  output$table <- renderDataTable(datatable) \
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
 #\
  observeEvent(input$table_rows_selected,\{\
      if(!is.null(input$table_rows_selected))\
      \{\
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      output$sitemap = renderLeaflet(map)\
      \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(151.2093,-33.8688,zoom = 10)%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      \
      #%>%  \
       # addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
      \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
 \
\
\}\
\
shinyApp(ui, server)\
\
\
\
\
\
\
\
1: only with map\
\
library(shiny)\
library(googleway)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
ui <- shiny::basicPage(\
  \
  div(\
    textInput(inputId = "my_address", label = "")    \
    ,textOutput(outputId = "copy_of_address")\
    ,HTML(paste0("\
                 <script>\
                 function initAutocomplete() \{\
                 new google.maps.places.Autocomplete(\
                 (document.getElementById('my_address')),\
                 \{types: ['geocode']\}\
                 );\
                 \}\
                 </script>\
                 <script src='https://maps.googleapis.com/maps/api/js?key=", key,"&libraries=places&callback=initAutocomplete'\
                 async defer></script>\
                 "))\
    ,google_mapOutput(outputId = "my_map")\
    )\
  \
    )\
\
server <- function(input, output) \{\
  \
  my_address <- reactive(\{\
    input$my_address\
  \})\
  \
  output$copy_of_address <- renderText(\{\
    my_address()\
  \})\
  \
  output$my_map <- renderGoogle_map(\{\
    my_address <- my_address()\
    validate(\
      need(my_address, "Address not available")\
    )\
    \
    df <- google_geocode(address = my_address)\
    my_coords <- geocode_coordinates(df)\
    my_coords <- c(my_coords$lat[1], my_coords$lng[1])\
    \
    google_map(\
      location = my_coords,\
      zoom = 12,\
      map_type_control = FALSE,\
      zoom_control = FALSE,\
      street_view_control = FALSE\
    )\
  \})\
  \
\}\
\
shinyApp(ui, server)\
\
\
2: Dashboard\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
ui <- dashboardPage(\
  dashboardHeader(title = "Basic dashboard"),\
  dashboardSidebar(\
    sidebarMenu(\
      menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),\
      menuItem("Widgets", tabName = "widgets", icon = icon("th"))\
    )\
  ),\
  dashboardBody(\
    tabItems(\
      # First tab content\
      tabItem(tabName = "dashboard",\
              fluidRow(\
                box(plotOutput("plot1", height = 250)),\
                \
                box(\
                  title = "Controls",\
                  sliderInput("slider", "Number of observations:", 1, 100, 50)\
                )\
              )\
      ),\
      \
      # Second tab content\
      tabItem(tabName = "widgets",\
              h2("Widgets tab content")\
      )\
    )\
  )\
)\
\
server <- function(input, output) \{\
  set.seed(122)\
  histdata <- rnorm(500)\
  \
  output$plot1 <- renderPlot(\{\
    data <- histdata[seq_len(input$slider)]\
    hist(data)\
  \})\
\}\
\
shinyApp(ui, server)\
\
3: dashboard with map\
\
\
library(shiny)\
library(shinydashboard)\
library(googleway)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
ui <- dashboardPage(\
  dashboardHeader(title = "Basic dashboard"),\
  dashboardSidebar(\
    sidebarMenu(\
      menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),\
      menuItem("Widgets", tabName = "widgets", icon = icon("th"))\
    )\
  ),\
  dashboardBody(\
    div(\
      textInput(inputId = "my_address", label = "")    \
      ,textOutput(outputId = "copy_of_address")\
      ,HTML(paste0("\
                 <script>\
                 function initAutocomplete() \{\
                 new google.maps.places.Autocomplete(\
                 (document.getElementById('my_address')),\
                 \{types: ['geocode']\}\
                 );\
                 \}\
                 </script>\
                 <script src='https://maps.googleapis.com/maps/api/js?key=", key,"&libraries=places&callback=initAutocomplete'\
                 async defer></script>\
                 "))\
      ,google_mapOutput(outputId = "my_map")\
    ),\
    \
    \
    tabItems(\
      # First tab content\
      tabItem(tabName = "dashboard",\
              fluidRow(\
                box(plotOutput("plot1", height = 250)),\
                \
                box(\
                  title = "Controls",\
                  sliderInput("slider", "Number of observations:", 1, 100, 50)\
                )\
              )\
      ),\
      \
      # Second tab content\
      tabItem(tabName = "widgets",\
              h2("Widgets tab content")\
      )\
    )\
  )\
)\
      \
      \
              \
              \
   \
\
\
server <- function(input, output) \{\
  set.seed(122)\
  histdata <- rnorm(500)\
  \
  output$plot1 <- renderPlot(\{\
    data <- histdata[seq_len(input$slider)]\
    hist(data)\
  \})\
  \
  my_address <- reactive(\{\
    input$my_address\
  \})\
  \
  output$copy_of_address <- renderText(\{\
    my_address()\
  \})\
  \
  output$my_map <- renderGoogle_map(\{\
    my_address <- my_address()\
    validate(\
      need(my_address, "Address not available")\
    )\
    \
    df <- google_geocode(address = my_address)\
    my_coords <- geocode_coordinates(df)\
    my_coords <- c(my_coords$lat[1], my_coords$lng[1])\
    \
    google_map(\
      location = my_coords,\
      zoom = 12,\
      map_type_control = FALSE,\
      zoom_control = FALSE,\
      street_view_control = FALSE\
    )\
  \})\
\}\
\
shinyApp(ui, server)\
\
4: data table\
\
    # search for Ma or Me\
    datatable(\
      centers, colnames = c('No' = 1),\
      filter = list(position = 'top', clear = FALSE),\
      options = list(\
        search = list(regex = TRUE, caseInsensitive = FALSE, search = ''),\
        pageLength = 2\
      )\
    )\
\
5: temp\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
mtcars2 = mtcars[, c(1:5, 9)]\
mtcars2$am = factor(mtcars$am, c(0, 1), c('automatic', 'manual'))\
\
\
ui <- dashboardPage(\
  dashboardHeader(title = "Basic dashboard"),\
  dashboardSidebar(\
    sidebarMenu(\
      menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),\
      menuItem("Widgets", tabName = "widgets", icon = icon("th"))\
    )\
  ),\
  dashboardBody(\
    \
    \
    # search for Ma or Me\
    datatable(\
      centers, colnames = c('No' = 1),\
      filter = list(position = 'top', clear = FALSE),\
      options = list(\
        search = list(regex = TRUE, caseInsensitive = TRUE, search = ''),\
        pageLength = 1\
      )\
    ),\
    div(\
      textInput(inputId = "my_address", label = "")    \
      ,textOutput(outputId = "copy_of_address")\
      ,HTML(paste0("\
                 <script>\
                 function initAutocomplete() \{\
                 new google.maps.places.Autocomplete(\
                 (document.getElementById('my_address')),\
                 \{types: ['geocode']\}\
                 );\
                 \}\
                 </script>\
                 <script src='https://maps.googleapis.com/maps/api/js?key=", key,"&libraries=places&callback=initAutocomplete'\
                 async defer></script>\
                 "))\
      ,google_mapOutput(outputId = "my_map")\
    ),\
    \
    \
    tabItems(\
      # First tab content\
      tabItem(tabName = "dashboard",\
              fluidRow(\
                box(plotOutput("plot1", height = 250)),\
                \
                box(\
                  title = "Controls",\
                  sliderInput("slider", "Number of observations:", 1, 100, 50)\
                )\
              )\
      ),\
      \
      # Second tab content\
      tabItem(tabName = "widgets",\
              h2("Widgets tab content")\
      )\
    )\
  )\
)\
      \
      \
              \
              \
   \
\
\
server <- function(input, output) \{\
  set.seed(122)\
  histdata <- rnorm(500)\
  \
  output$plot1 <- renderPlot(\{\
    data <- histdata[seq_len(input$slider)]\
    hist(data)\
  \})\
  \
  my_address <- reactive(\{\
    input$my_address\
  \})\
  \
  output$copy_of_address <- renderText(\{\
    my_address()\
  \})\
  \
  output$my_map <- renderGoogle_map(\{\
    my_address <- my_address()\
    validate(\
      need(my_address, "Address not available")\
    )\
    \
    df <- google_geocode(address = my_address)\
    my_coords <- geocode_coordinates(df)\
    my_coords <- c(my_coords$lat[1], my_coords$lng[1])\
    \
    google_map(\
      location = my_coords,\
      zoom = 12,\
      map_type_control = FALSE,\
      zoom_control = FALSE,\
      street_view_control = FALSE\
    )\
  \})\
\}\
\
shinyApp(ui, server)\
\
6: data table (print)\
\
library(shiny)\
library(shinydashboard)\
library(DT)\
\
ui <- dashboardPage(\
  dashboardHeader(title = "Data Table Example"),\
  dashboardSidebar(\
    sidebarMenu(\
      menuItem('Tabs', tabName='tabs',\
               menuSubItem('Tab 1', tabName='tab1'),\
               menuSubItem('Tab 2', tabName='tab2')\
      )\
    )\
  ),\
  \
  dashboardBody(\
    \
    tabItems(\
      tabItem(tabName='tab1',\
              actionButton("import","Import"),\
              br(),\
              tags$div(tags$h3(tags$b("Get Selected Row Values",style="color: rgb(57,156,8)"))),\
              br(),\
              DT::dataTableOutput('ProductDataTable')\
      ),\
      tabItem(tabName='tab2',\
              actionButton("display","Display"),\
              uiOutput('info')\
      )\
    )\
  )\
)\
\
server <- function(input, output) \{\
  \
  observeEvent(input$import,\{\
    \
    Product <- mtcars\
    \
    output$ProductDataTable <- DT::renderDataTable(\{\
      \
      DT::datatable(Product,selection = "single",\
                    # JS using call back function to get the row values on single click\
                    callback = JS("table.on('click.dt', 'tr',\
                                  function() \{\
                                  Shiny.onInputChange('rows', table.rows(this).data().toArray());\
                                  \});"),\
\
                    extensions = c('Buttons', 'ColReorder', 'FixedHeader', 'Scroller'),\
                    rownames=FALSE,\
                    options=list(dom = 'Bfrtip',\
                                 searching = T,\
                                 pageLength = 25,\
                                 searchHighlight = TRUE,\
                                 colReorder = TRUE,\
                                 fixedHeader = TRUE,\
                                 filter = 'bottom',\
                                 buttons = c('copy', 'csv','excel', 'print'),\
                                 paging    = TRUE,\
                                 deferRender = TRUE,\
                                 scroller = TRUE,\
                                 scrollX = TRUE,\
                                 scrollY = 700\
                                 \
                    ))\
    \})\
    \
\})\
  \
  observeEvent(input$display,\{\
    \
    row_count <- input$ProductDataTable_rows_selected\
    \
    output$info <- renderPrint(\{\
      cat('Row Selected 1st Col Value: ')\
      # getting 1st row col value\
      cat(input$rows[1], sep = ', ')\
      \
    \})\
    \
  \})\
  \}\
\
shinyApp(ui, server)\
\
7: new datable\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
mtcars2 = mtcars[, c(1:5, 9)]\
mtcars2$am = factor(mtcars$am, c(0, 1), c('automatic', 'manual'))\
\
\
ui <- dashboardPage(\
  dashboardHeader(title = "Basic dashboard"),\
  dashboardSidebar(\
    sidebarMenu(\
      menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),\
      menuItem("Widgets", tabName = "widgets", icon = icon("th"))\
    )\
  ),\
  dashboardBody(\
    \
    \
    fluidRow(\
      column(4,\
             selectInput("postCode",\
                         "postcode:",\
                         c("All",\
                           unique(as.character(centers$postCode))))\
      ),\
      column(4,\
             selectInput("Religion",\
                         "Religion:",\
                         c("All",\
                           unique(as.character(centers$RELIGION))))\
      ),\
      column(4,\
             selectInput("Culture",\
                         "Culture:",\
                         c("All",\
                           unique(as.character(centers$CULTURE))))\
      )\
    ),\
    DT::dataTableOutput("table"),\
   \
  \
    div(\
      textInput(inputId = "my_address", label = "")    \
      ,textOutput(outputId = "copy_of_address")\
      ,HTML(paste0("\
                   <script>\
                   function initAutocomplete() \{\
                   new google.maps.places.Autocomplete(\
                   (document.getElementById('my_address')),\
                   \{types: ['geocode']\}\
                   );\
                   \}\
                   </script>\
                   <script src='https://maps.googleapis.com/maps/api/js?key=", key,"&libraries=places&callback=initAutocomplete'\
                   async defer></script>\
                   "))\
      ,google_mapOutput(outputId = "my_map")\
      ),\
    \
    \
    tabItems(\
      # First tab content\
      tabItem(tabName = "dashboard",\
              fluidRow(\
                box(plotOutput("plot1", height = 250)),\
                \
                box(\
                  title = "Controls",\
                  sliderInput("slider", "Number of observations:", 1, 100, 50)\
                )\
              )\
      ),\
      \
      # Second tab content\
      tabItem(tabName = "widgets",\
              h2("Widgets tab content")\
      )\
    )\
      )\
      )\
\
\
\
\
\
\
\
server <- function(input, output) \{\
  set.seed(122)\
  histdata <- rnorm(500)\
  \
  output$plot1 <- renderPlot(\{\
    data <- histdata[seq_len(input$slider)]\
    hist(data)\
  \})\
  \
  my_address <- reactive(\{\
    input$my_address\
  \})\
  \
  output$copy_of_address <- renderText(\{\
    my_address()\
  \})\
  \
  output$table <- DT::renderDataTable(DT::datatable(\{\
    data <- centers\
    if (input$postCode != "All") \{\
      data <- data[data$postCode == input$postCode,]\
    \}\
    \
    data\
  \}))\
  \
  output$my_map <- renderGoogle_map(\{\
    my_address <- my_address()\
    validate(\
      need(my_address, "Address not available")\
    )\
    \
    df <- google_geocode(address = my_address)\
    my_coords <- geocode_coordinates(df)\
    my_coords <- c(my_coords$lat[1], my_coords$lng[1])\
    \
    google_map(\
      location = my_coords,\
      zoom = 12,\
      map_type_control = FALSE,\
      zoom_control = FALSE,\
      street_view_control = FALSE\
      \
     \
    )\
  \})\
\}\
\
shinyApp(ui, server)\
\
8: worked, 2 problems\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
mtcars2 = mtcars[, c(1:5, 9)]\
mtcars2$am = factor(mtcars$am, c(0, 1), c('automatic', 'manual'))\
\
\
ui <- dashboardPage(\
  dashboardHeader(title = "Basic dashboard"),\
  dashboardSidebar(\
    sidebarMenu(\
      menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),\
      menuItem("Widgets", tabName = "widgets", icon = icon("th"))\
    )\
  ),\
  dashboardBody(\
    \
    \
    fluidRow(\
      column(4,\
             selectInput("postCode",\
                         "postcode:",\
                         c("All",\
                           unique(as.character(centers$postCode))))\
      ),\
      column(4,\
             selectInput("Religion",\
                         "Religion:",\
                         c("All",\
                           unique(as.character(centers$RELIGION))))\
      ),\
      column(4,\
             selectInput("Culture",\
                         "Culture:",\
                         c("All",\
                           unique(as.character(centers$CULTURE))))\
      )\
      ,\
      column(4,\
             selectInput("Address",\
                         "Address:",\
                         c("All",\
                           unique(as.character(centers$Address))))\
      )\
    ),\
    DT::dataTableOutput("table"),\
    column(3, verbatimTextOutput('x4')),\
    \
\
\
   \
    textOutput("celltext"),\
    \
    \
   \
  \
    div(\
      textInput(inputId = "my_address", label = "")    \
      ,textOutput(outputId = "copy_of_address")\
      ,HTML(paste0("\
                   <script>\
                   function initAutocomplete() \{\
                   new google.maps.places.Autocomplete(\
                   (document.getElementById('my_address')),\
                   \{types: ['geocode']\}\
                   );\
                   \}\
                   </script>\
                   <script src='https://maps.googleapis.com/maps/api/js?key=", key,"&libraries=places&callback=initAutocomplete'\
                   async defer></script>\
                   "))\
      ,google_mapOutput(outputId = "my_map")\
      ),\
    \
    \
    tabItems(\
      # First tab content\
      tabItem(tabName = "dashboard",\
              fluidRow(\
                box(plotOutput("plot1", height = 250)),\
                \
                box(\
                  title = "Controls",\
                  sliderInput("slider", "Number of observations:", 1, 100, 50)\
                )\
              )\
      ),\
      \
      # Second tab content\
      tabItem(tabName = "widgets",\
              h2("Widgets tab content")\
      )\
    )\
      )\
      )\
\
\
\
\
\
\
\
server <- function(input, output) \{\
  set.seed(122)\
  histdata <- rnorm(500)\
  \
  output$plot1 <- renderPlot(\{\
    data <- histdata[seq_len(input$slider)]\
    hist(data)\
  \})\
  \
  my_address <- reactive(\{\
    #input$my_address\
    #centers[['Address']][1]\
    #input$Address\
    #output$celltext\
    centers[input$table_cells_selected]\
  \})\
  \
  output$copy_of_address <- renderText(\{\
    my_address()\
  \})\
  \
#  output$table <- DT::renderDataTable(DT::datatable(\{\
 #   data <- centers\
  #  if (input$postCode != "All") \{\
   #   data <- data[data$postCode == input$postCode,]\
  #  \}\
    \
   # data\
#  \}))\
  \
  #\
  output$table <- DT::renderDataTable(centers, \
                                            selection=list(mode="single",target="cell"),\
                                            server = FALSE,\
                                            rownames=FALSE\
  )\
  \
  #output$selectedCells <- renderPrint(input$table_cells_selected)\
  output$celltext <- renderText(\{\
    #cell <- input$table_cells_selected\
    centers <- centers[input$table_cells_selected]\
  \})\
  \
  #\
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  output$selected <- renderText(\{ \
    selectedRow()\
  \})\
  \
  output$address <- renderText(\{ \
    table['Address']\
  \})\
  output$x4 = renderPrint(\{\
    s = input$table_rows_selected\
    if (length(s)) \{\
      cat('These rows were selected:\\n\\n')\
      cat(s['Address'])\
      cat(s, sep = ', ')\
      \
    \}\
  \})\
  \
  output$my_map <- renderGoogle_map(\{\
    my_address <- my_address()\
    validate(\
      need(my_address, "Address not available")\
    )\
    \
    df <- google_geocode(address = my_address)\
    my_coords <- geocode_coordinates(df)\
    my_coords <- c(my_coords$lat[1], my_coords$lng[1])\
    \
    google_map(\
      location = my_coords,\
      zoom = 12,\
      map_type_control = FALSE,\
      zoom_control = FALSE,\
      street_view_control = FALSE\
      \
     \
    ) \
  \})\
\}\
\
shinyApp(ui, server)\
\
10: leaflet\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
\
\
\
ui <- dashboardPage(\
  dashboardHeader(title = "Basic dashboard"),\
  dashboardSidebar(\
    sidebarMenu(\
      menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),\
      menuItem("Widgets", tabName = "widgets", icon = icon("th"))\
    )\
  ),\
  dashboardBody(\
    leafletOutput("sitemap"),\
    \
    \
    fluidRow(\
      column(4,\
             selectInput("postCode",\
                         "postcode:",\
                         c("All",\
                           unique(as.character(centers$postCode))))\
      ),\
      column(4,\
             selectInput(\'93State\'94,\
                         \'93State:\'94,\
                         c("All",\
                           unique(as.character(centers$S))))\
      ),\
      column(4,\
             selectInput("Culture",\
                         "Culture:",\
                         c("All",\
                           unique(as.character(centers$CULTURE))))\
      )\
      ,\
      column(4,\
             selectInput("Address",\
                         "Address:",\
                         c("All",\
                           unique(as.character(centers$Address))))\
      )\
    ),\
    DT::dataTableOutput("table"),\
    column(3, verbatimTextOutput('x4')),\
    \
   \
    textOutput("celltext"),\
    \
\
    \
    \
  \
      \
   \
\
    # Second tab content\
    tabItem(tabName = "widgets",\
            h2("Widgets tab content")\
    )\
  )\
)\
\
\
\
\
\
\
\
server <- function(input, output) \{\
  \
  map = leaflet(data=centers) %>% \
    addTiles() %>% setView(144.9631,-37.8136,zoom = 5)%>%\
    addMarkers(~longitude,~latitude,popup=~as.character(OUTLET_NAME))\
  output$sitemap = renderLeaflet(map)\
  \
\
  \
  my_address <- reactive(\{\
    #input$my_address\
    #centers[['Address']][1]\
    #input$Address\
    #output$celltext\
    centers[input$table_cells_selected]\
  \})\
  \
  output$copy_of_address <- renderText(\{\
    my_address()\
  \})\
  \
#  output$table <- DT::renderDataTable(DT::datatable(\{\
 #   data <- centers\
  #  if (input$postCode != "All") \{\
   #   data <- data[data$postCode == input$postCode,]\
  #  \}\
    \
   # data\
#  \}))\
  \
  #\
  output$table <- DT::renderDataTable(centers, \
                                            selection=list(mode="single",target="cell"),\
                                            server = FALSE,\
                                            rownames=FALSE\
  )\
  \
  #output$selectedCells <- renderPrint(input$table_cells_selected)\
  output$celltext <- renderText(\{\
    #cell <- input$table_cells_selected\
    centers <- centers[input$table_cells_selected]\
  \})\
  \
  #\
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  output$selected <- renderText(\{ \
    selectedRow()\
  \})\
  \
  output$address <- renderText(\{ \
    table['Address']\
  \})\
  output$x4 = renderPrint(\{\
    s = input$table_rows_selected\
    if (length(s)) \{\
      cat('These rows were selected:\\n\\n')\
      cat(s['Address'])\
      cat(s, sep = ', ')\
      \
    \}\
  \})\
  \
  \
\
\}\
\
shinyApp(ui, server)\
\
11: leaflet (select - marker)\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
\
\
\
ui <- dashboardPage(\
  dashboardHeader(title = "Basic dashboard"),\
  dashboardSidebar(\
    sidebarMenu(\
      menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),\
      menuItem("Widgets", tabName = "widgets", icon = icon("th"))\
    )\
  ),\
  dashboardBody(\
    leafletOutput("sitemap"),\
    \
    \
    fluidRow(\
      column(4,\
             selectInput("postCode",\
                         "postcode:",\
                         c("All",\
                           unique(as.character(centers$postCode))))\
      ),\
      column(4,\
             selectInput("Religion",\
                         "Religion:",\
                         c("All",\
                           unique(as.character(centers$RELIGION))))\
      ),\
      column(4,\
             selectInput("Culture",\
                         "Culture:",\
                         c("All",\
                           unique(as.character(centers$CULTURE))))\
      )\
      ,\
      column(4,\
             selectInput("Address",\
                         "Address:",\
                         c("All",\
                           unique(as.character(centers$Address))))\
      )\
    ),\
    DT::dataTableOutput("table"),\
   \
    \
   \
    textOutput("celltext")\
    \
\
    \
    \
  \
      \
   \
\
  )\
)\
\
\
\
\
\
\
\
server <- function(input, output) \{\
  \
 \
  \
\
  \
  my_address <- reactive(\{\
    #input$my_address\
    #centers[['Address']][1]\
    #input$Address\
    #output$celltext\
    centers[input$table_rows_selected]\
  \})\
  \
  output$copy_of_address <- renderText(\{\
    my_address()\
  \})\
  \
#  output$table <- DT::renderDataTable(DT::datatable(\{\
 #   data <- centers\
  #  if (input$postCode != "All") \{\
   #   data <- data[data$postCode == input$postCode,]\
  #  \}\
    \
   # data\
#  \}))\
  \
  #\
  output$table <- DT::renderDataTable(centers, \
                                            selection='single',\
                                            server = FALSE,\
                                            rownames=FALSE\
                                     \
  )\
  \
  #centersfiltered <- reactive (\{centers %>% filter(No == input$table_rows_selected)\})\
 \
  observeEvent(input$table_rows_selected,\{\
    \
    centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
    \
    map = leaflet(data=centersfiltered) %>% \
      addTiles() %>% setView(151.2093,-33.8688,zoom = 3)%>%  \
      addMarkers(~longitude,~latitude,popup=~as.character(OUTLET_NAME))\
    output$sitemap = renderLeaflet(map)\
    \
  \})\
  \
  \
\
  \
  #output$selectedCells <- renderPrint(input$table_cells_selected)\
  output$celltext <- renderText(\{\
    #cell <- input$table_cells_selected\
    centers <- centers[input$table_rows_selected]\
  \})\
  \
  #\
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  output$selected <- renderText(\{ \
    selectedRow()\
  \})\
  \
  output$address <- renderText(\{ \
    table['Address']\
  \})\
  output$x4 = renderPrint(\{\
    s = input$table_rows_selected\
    if (length(s)) \{\
      cat('These rows were selected:\\n\\n')\
      cat(s['Address'])\
      cat(s, sep = ', ')\
      \
    \}\
  \})\
  \
  \
\
\}\
\
shinyApp(ui, server)\
\
\
\
\
\
\
12:  good \
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
\
\
\
ui <- navbarPage(\
  \
  title = 'Home care centers', id = 'x0',\
  \
  tabPanel('Search',\
    \
    \
           leafletOutput("sitemap"),\
           \
    DT::dataTableOutput("table")\
   \
    \
   \
   \
    \
\
    \
    \
  \
      \
   \
\
  ),\
  tabPanel('Show all', \
           \
           leafletOutput("allMap")\
           \
           \
)\
)\
\
\
\
\
\
\
\
server <- function(input, output) \{\
  \
#\
  datatable = datatable(centers, \
            selection='single',\
        \
            rownames=FALSE,\
            options = list(searchHighlight = TRUE)\
           ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
    formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
    \
    formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \
  output$table <- renderDataTable(datatable) \
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
\
 #\
  observeEvent(input$table_rows_selected,\{\
    centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
    \
    map = leaflet(data=centersfiltered ) %>% \
      addTiles() %>% setView(151.2093,-33.8688,zoom = 3)%>%  \
      addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
    output$sitemap = renderLeaflet(map)\
    \
  \})\
  #\
  \
  \
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
  #\
  observeEvent(input$allMap_marker_click, \{ \
    p <- input$allMap_marker_click  # typo was on this line\
    print(p)\
  \})\
  #\
  \
  \
  \
  \
\
\}\
\
shinyApp(ui, server)\
\
13: leaflet perfect\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
\
ui <- navbarPage(\
  \
  title = 'Home care centers', id = 'x0',\
  \
  tabPanel('Search',\
    \
    \
           leafletOutput("sitemap"),\
           \
    DT::dataTableOutput("table")\
  ),\
  tabPanel('Show all', \
           \
           leafletOutput("allMap")\
           \
           \
)\
)\
\
server <- function(input, output) \{\
  \
#\
  datatable = datatable(centers, \
            selection='single',\
        \
            rownames=FALSE,\
            options = list(searchHighlight = TRUE)\
           ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
    formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
    \
    formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \
  output$table <- renderDataTable(datatable) \
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
 #\
  observeEvent(input$table_rows_selected,\{\
      if(!is.null(input$table_rows_selected))\
      \{\
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(map)\
      \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(151.2093,-33.8688,zoom = 12)%>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
      \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
 \
\
\}\
\
shinyApp(ui, server)\
\
\
16: very very good\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
\
ui <- fluidPage(\
  \
  \
  \
\
          \
          h1( em("Home Care Centers in Australia"), align = "center"),\
           leafletOutput("sitemap"),\
           titlePanel(""),\
           \
           h5("Search by postcode, culture, language, religion, and services. Just type in the search  box",align = "right",style = "color:blue"),\
           titlePanel(""),\
           \
    DT::dataTableOutput("table")\
  \
\
)\
\
server <- function(input, output) \{\
  \
#\
  datatable = datatable(centers, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller'),\
            \
        \
            rownames=FALSE,\
            #options = list(searchHighlight = TRUE)\
            options = list(searchHighlight = TRUE,dom = 'Bfrtip',\
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),fixedHeader = TRUE,deferRender = TRUE,\
                           scrollY = 200,\
                           scroller = TRUE,\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
           ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
    formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
    \
    formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \
  output$table <- renderDataTable(datatable) \
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
 #\
  observeEvent(input$table_rows_selected,\{\
      if(!is.null(input$table_rows_selected))\
      \{\
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(map)\
      \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(151.2093,-33.8688,zoom = 10)%>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
      \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
 \
\
\}\
\
shinyApp(ui, server)\
\
\
\
\
14: Ok\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
\
ui <- fluidPage(\
  \
  \
  \
\
          \
          h1( em("Home Care Centers in Australia"), align = "center"),\
          #h5("Click the home care center name to see the location on the map",align = "left",style = "color:blue"),\
           leafletOutput("sitemap"),\
           titlePanel(""),\
          \
           h5("Search by postcode, culture, language, religion, and services. Just type in the search  box",align = "right",style = "color:blue"),\
           titlePanel(""),\
          \
    DT::dataTableOutput("table")\
  \
\
)\
\
server <- function(input, output) \{\
  \
#\
  datatable = datatable(centers, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller'),\
            \
        \
            rownames=FALSE,\
            #options = list(searchHighlight = TRUE)\
            options = list(searchHighlight = TRUE,dom = 'Bfrtip',\
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),fixedHeader = TRUE,deferRender = TRUE,\
                           scrollY = 200,\
                           scroller = TRUE,\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
           ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
    formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
    \
    formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \
  output$table <- renderDataTable(datatable) \
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
 #\
  observeEvent(input$table_rows_selected,\{\
      if(!is.null(input$table_rows_selected))\
      \{\
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(map)\
      \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(151.2093,-33.8688,zoom = 10)%>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
      \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
 \
\
\}\
\
shinyApp(ui, server)\
\
17: New layout\
\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
         #sidebar \{\
            background-color: white;\
        \}\
\
        body, label, input, button, select \{ \
          font-family: "Arial";\
        \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
 \
  \
  sidebarLayout(\
   \
    \
    sidebarPanel(id="sidebar",\
      \
      img(id="img",src = "LogoBlue.png", height = 200, width=400),\
      \
      #h3( em("Home Care Centers in Australia"), align = "center")\
      h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
      h4("1: Click + to see the detailed information and the location on the map.",align = "left",style = "color:blue",font="Times New Roman"),\
      \
      h4("2: Search by postcode, culture, language, religion, and services. Just type in the search  box.",align = "left",style = "color:blue",font="Times New Roman"),\
      \
      h4("3: Export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:blue",font="Times New Roman")),\
      \
     \
      \
     \
      \
  \
\
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      DT::dataTableOutput("table")\
     \
      \
      \
    )  \
          #h1( em("Home Care Centers in Australia"), align = "center"),\
          #h5("Click the home care center name to see the location on the map",align = "left",style = "color:blue"),\
           \
          \
          \
           #h5("Search by postcode, culture, language, religion, and services. Just type in the search  box",align = "right",style = "color:blue"),\
           \
          \
  \
\
)\
)\
\
server <- function(input, output) \{\
  \
#\
  datatable = datatable(centers, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller'),\
            \
        \
            rownames=FALSE,\
           \
            #options = list(searchHighlight = TRUE)\
            options = list(searchHighlight = TRUE,dom = 'Bfrtip',pageLength=5,\
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),fixedHeader = TRUE,deferRender = TRUE,\
                          # scrollY = 200\
                           #scroller = TRUE,\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
           ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
    formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
    \
    formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \
  output$table <- renderDataTable(datatable) \
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
 #\
  observeEvent(input$table_rows_selected,\{\
      if(!is.null(input$table_rows_selected))\
      \{\
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(map)\
      \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(151.2093,-33.8688,zoom = 10)%>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
      \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
 \
\
\}\
\
shinyApp(ui, server)\
\
\
\
\
18: best\
\
\
## app.R ##\
library(shiny)\
library(shinydashboard)\
library(googleway)\
library(DT)\
library(leaflet)\
library(datasets)\
library(dplyr)\
library(magrittr)\
\
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"\
set_key(key = key)\
google_keys()\
\
centers <- read.csv('test2_copy.csv')\
\
ui <- fluidPage(tags$head(tags$style(\
  HTML('\
         #sidebar \{\
            background-color: white;\
        \}\
\
        body, label, input, button, select \{ \
          font-family: "Arial";\
        \}'))),\
  tags$head(tags$style(\
    type="text/css",\
    "#img img \{max-width: 100%; width: 100%; height: auto\}"\
  )),\
 \
  \
  sidebarLayout(\
   \
    \
    sidebarPanel(id="sidebar",\
      \
      img(id="img",src = "LogoBlue.png", height = 200, width=400),\
      \
      #h3( em("Home Care Centers in Australia"), align = "center")\
      h3( em("Tips:") , align = "left",style = "color:Black",font="Times New Roman"),\
      h4("1: Click + to see the detailed information and the location on the map.",align = "left",style = "color:navy",font="Times New Roman"),\
      \
      \
      h4("2: Search by postcode, culture, language, religion, and services. Just type in the search box. Examples: ",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- Italian",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- 2200",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- Italian 2200",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- Dementia",align = "left",style = "color:navy",font="Times New Roman"),\
      h5("- Dementia Spanish 2200",align = "left",style = "color:navy",font="Times New Roman"),\
      \
      h4("3: Export your search results by choosing Copy, CSV, Excel, PDF, Print.",align = "left",style = "color:navy",font="Times New Roman")),\
      \
     \
      \
     \
      \
  \
\
    mainPanel(\
      \
      leafletOutput("sitemap"),\
      DT::dataTableOutput("table")\
     \
      \
      \
    )  \
          #h1( em("Home Care Centers in Australia"), align = "center"),\
          #h5("Click the home care center name to see the location on the map",align = "left",style = "color:blue"),\
           \
          \
          \
           #h5("Search by postcode, culture, language, religion, and services. Just type in the search  box",align = "right",style = "color:blue"),\
           \
          \
  \
\
)\
)\
\
server <- function(input, output) \{\
  \
#\
  datatable = datatable(centers, \
            selection='single',\
            extensions = c('Responsive','Buttons','FixedHeader','Scroller'),\
            \
        \
            rownames=FALSE,\
           \
            #options = list(searchHighlight = TRUE)\
            options = list(searchHighlight = TRUE,dom = 'Bfrtip',pageLength=5,\
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),fixedHeader = TRUE,deferRender = TRUE,\
                           scrollY = 200,\
                           scroller = TRUE,\
              initComplete = JS(\
                "function(settings, json) \{",\
                "$(this.api().table().header()).css(\{'background-color': '#000', 'color': '#fff'\});",\
                "\}")\
            )\
           ) %>%formatStyle('No', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Name', backgroundColor = 'white', fontWeight = 'bold')%>%\
    formatStyle('Address', backgroundColor = 'lightblue', fontWeight = 'bold') %>%\
    formatStyle('Culture', backgroundColor = 'white', fontWeight = 'bold')%>%\
    \
    formatStyle('Religion', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Language', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Services', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('State', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Postcode', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Latitude', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Longitude', backgroundColor = 'lightblue', fontWeight = 'bold')%>%\
    formatStyle('Phone', backgroundColor = 'white', fontWeight = 'bold') %>%\
    formatStyle('Website', backgroundColor = 'lightblue', fontWeight = 'bold')\
  \
  output$table <- renderDataTable(datatable) \
  #%>%formatStyle(colnames(centers)[1:ncol(centers)], backgroundColor = 'lightyellow', fontWeight = 'bold')\
  \
 #\
  observeEvent(input$table_rows_selected,\{\
      if(!is.null(input$table_rows_selected))\
      \{\
      centersfiltered <- centers %>% filter(No == input$table_rows_selected)\
      \
      map = leaflet(data=centersfiltered ) %>% \
        addTiles() %>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      output$sitemap = renderLeaflet(map)\
      \}\
    else\
    \{\
      mapAll = leaflet(data=centers ) %>% \
        addTiles() %>% setView(151.2093,-33.8688,zoom = 10)%>%  \
        addMarkers(~Longitude,~Latitude,popup=~as.character(Name))%>%\
        addEasyButton(easyButton(\
          icon="fa-crosshairs", title="Locate Me",\
          onClick=JS("function(btn, map)\{ map.locate(\{setView: true\}); \}")))\
      output$sitemap = renderLeaflet(mapAll)\
      \
    \}\
      \
  \},ignoreNULL = FALSE)\
  #\
  \
  #\
  \
  mapAll = leaflet(data=centers ) %>% \
    addTiles() %>% setView(151.2093,-33.8688,zoom = 8)%>%  \
    addMarkers(~Longitude,~Latitude,popup=~as.character(Name))\
  output$allMap = renderLeaflet(mapAll)\
  \
  \
  selectedRow <- eventReactive(input$table_rows_selected,\{\
    row.names(centers)[c(input$table_rows_selected)]\
  \})\
  \
 \
\
\}\
\
shinyApp(ui, server)\
\
\
\
\
\
\
}